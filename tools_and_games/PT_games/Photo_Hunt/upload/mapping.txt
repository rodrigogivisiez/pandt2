com.potatoandtomato.games.Entrance -> com.potatoandtomato.games.Entrance:
    com.potatoandtomato.games.models.Services _services -> a
    com.potatoandtomato.games.assets.MyAssets _assets -> b
    com.potatoandtomato.common.GameCoordinator _coordinator -> c
    com.potatoandtomato.games.screens.main.MainLogic _mainLogic -> d
    com.potatoandtomato.games.screens.time_bar.TimeLogic _timeLogic -> e
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic _userCountersLogic -> f
    com.potatoandtomato.games.screens.hints.HintsLogic _hintsLogic -> g
    com.potatoandtomato.games.screens.main.ImageStorage _imageStorage -> h
    com.potatoandtomato.games.screens.review.ReviewLogic _reviewLogic -> i
    com.potatoandtomato.games.screens.stage_counter.StageCounterLogic _stageCounterLogic -> j
    com.potatoandtomato.games.screens.time_bar.KingLogic _kingLogic -> k
    com.potatoandtomato.games.screens.time_bar.KnightLogic _knightLogic -> l
    com.potatoandtomato.games.screens.time_bar.CastleLogic _castleLogic -> m
    com.potatoandtomato.games.screens.scores.ScoresLogic _scoresLogic -> n
    com.potatoandtomato.games.models.GameModel _gameModel -> o
    com.potatoandtomato.games.screens.main.StageImagesLogic _stageImagesLogic -> p
    com.potatoandtomato.games.screens.main.StageStateLogic _stageStateLogic -> q
    com.potatoandtomato.games.screens.main.GameDataContract _gameDataContract -> r
    53:91:void <init>(com.potatoandtomato.common.GameCoordinator) -> <init>
    95:98:void init() -> init
    102:105:void onContinue() -> onContinue
    109:118:void dispose() -> dispose
    121:129:void initAssets() -> a
    132:138:com.potatoandtomato.games.models.Services getServices() -> getServices
    142:143:void setServices(com.potatoandtomato.games.models.Services) -> setServices
com.potatoandtomato.games.Entrance$1 -> com.potatoandtomato.games.Entrance$1:
    com.potatoandtomato.common.GameCoordinator val$gameCoordinator -> a
    com.potatoandtomato.games.Entrance this$0 -> b
    59:59:void <init>(com.potatoandtomato.games.Entrance,com.potatoandtomato.common.GameCoordinator) -> <init>
    63:88:void run() -> run
com.potatoandtomato.games.PhotoHuntGame -> com.potatoandtomato.games.PhotoHuntGame:
    boolean _initialized -> a
    com.potatoandtomato.games.Entrance entrance -> b
    29:30:void <init>(java.lang.String,boolean) -> <init>
    34:38:void create() -> create
    42:122:void onReady() -> onReady
    22:22:com.potatoandtomato.games.Entrance access$000(com.potatoandtomato.games.PhotoHuntGame) -> a
com.potatoandtomato.games.PhotoHuntGame$1 -> com.potatoandtomato.games.PhotoHuntGame$1:
    com.potatoandtomato.games.PhotoHuntGame this$0 -> s
    45:45:void <init>(com.potatoandtomato.games.PhotoHuntGame,com.potatoandtomato.common.GameCoordinator) -> <init>
    48:93:com.potatoandtomato.games.models.Services getServices() -> getServices
com.potatoandtomato.games.PhotoHuntGame$1$1 -> com.potatoandtomato.games.PhotoHuntGame$1$1:
    com.potatoandtomato.games.PhotoHuntGame$1 this$1 -> a
    51:51:void <init>(com.potatoandtomato.games.PhotoHuntGame$1,com.firebase.client.Firebase) -> <init>
    54:55:void getLastImageIndex(com.potatoandtomato.games.absintf.DatabaseListener) -> a
    59:60:void getImageDetailsByIndex(int,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    64:65:void getImageDetailsById(java.lang.String,com.potatoandtomato.games.absintf.DatabaseListener) -> a
com.potatoandtomato.games.PhotoHuntGame$1$2 -> com.potatoandtomato.games.PhotoHuntGame$1$2:
    com.potatoandtomato.games.PhotoHuntGame$1 this$1 -> a
    68:68:void <init>(com.potatoandtomato.games.PhotoHuntGame$1) -> <init>
    71:83:void getRemoteImage(java.lang.String,com.potatoandtomato.common.absints.WebImageListener) -> getRemoteImage
    88:88:void dispose() -> dispose
com.potatoandtomato.games.PhotoHuntGame$1$2$1 -> com.potatoandtomato.games.PhotoHuntGame$1$2$1:
    com.potatoandtomato.common.absints.WebImageListener val$listener -> a
    byte[] val$data -> b
    com.potatoandtomato.games.PhotoHuntGame$1$2 this$2 -> c
    74:74:void <init>(com.potatoandtomato.games.PhotoHuntGame$1$2,com.potatoandtomato.common.absints.WebImageListener,byte[]) -> <init>
    77:78:void run() -> run
com.potatoandtomato.games.PhotoHuntGame$2 -> com.potatoandtomato.games.PhotoHuntGame$2:
    com.potatoandtomato.games.PhotoHuntGame this$0 -> a
    98:98:void <init>(com.potatoandtomato.games.PhotoHuntGame) -> <init>
    101:115:void run() -> run
com.potatoandtomato.games.PhotoHuntGame$2$1 -> com.potatoandtomato.games.PhotoHuntGame$2$1:
    com.potatoandtomato.games.PhotoHuntGame$2 this$1 -> a
    105:105:void <init>(com.potatoandtomato.games.PhotoHuntGame$2) -> <init>
    108:113:void run() -> run
com.potatoandtomato.games.absintf.Announcement -> com.potatoandtomato.games.a.a:
    9:9:void <init>() -> <init>
    void run() -> a
com.potatoandtomato.games.absintf.DatabaseListener -> com.potatoandtomato.games.a.b:
    java.lang.Class _type -> a
    java.lang.String id -> b
    15:17:void <init>() -> <init>
    19:21:void <init>(java.lang.Class) -> <init>
    24:24:java.lang.Class getType() -> a
    void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.absintf.GameModelListener -> com.potatoandtomato.games.a.c:
    10:10:void <init>() -> <init>
    12:12:void onStageNumberChanged(int) -> a
    14:14:void onStageTypeChanged(com.potatoandtomato.games.enums.StageType) -> a
    16:16:void onCastleAttackedCountChanged(int) -> b
    18:18:void onTimeFinished() -> a
    20:20:void onRemainingMiliSecsChanged(int) -> c
    22:22:void onFreezingMiliSecsChanged(int) -> d
    24:24:void onHintChanged(int) -> e
    26:26:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
    28:28:void onCorrectClicked(com.potatoandtomato.games.models.SimpleRectangle,int) -> a
    30:30:void onAddedClickCount(java.lang.String,int) -> a
    32:32:void onScoresChanged(double) -> a
    34:34:void onHandledAreasChanged() -> b
com.potatoandtomato.games.absintf.HintsLogicListener -> com.potatoandtomato.games.a.d:
    8:8:void <init>() -> <init>
    void onHintClicked(com.badlogic.gdx.math.Rectangle,int) -> a
com.potatoandtomato.games.absintf.ImageStorageListener -> com.potatoandtomato.games.a.e:
    8:8:void <init>() -> <init>
    12:12:void onPopped(com.potatoandtomato.games.models.ImagePair) -> a
    16:16:void onPeeked(com.potatoandtomato.games.models.ImagePair) -> b
com.potatoandtomato.games.absintf.ReviewLogicListener -> com.potatoandtomato.games.a.f:
    6:6:void <init>() -> <init>
    void onDeleted() -> a
    void onGoToIndex(int) -> a
com.potatoandtomato.games.absintf.RoomMsgListener -> com.potatoandtomato.games.a.g:
    14:14:void <init>() -> <init>
    void onTouched(com.potatoandtomato.games.models.TouchedPoint,java.lang.String) -> a
    void onLose(com.potatoandtomato.games.models.GameModel) -> a
    void onWon(com.potatoandtomato.games.models.WonStageModel) -> a
    void onDownloadImageRequest(java.util.ArrayList) -> a
    void onGoToNextStage(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String,int) -> a
    void onStartPlaying(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
com.potatoandtomato.games.absintf.StageImagesHandlerListener -> com.potatoandtomato.games.a.h:
    6:6:void <init>() -> <init>
    void onTouch(float,float) -> a
    void requestCircleAll() -> a
    void cancelCircleAll() -> b
com.potatoandtomato.games.absintf.mockings.MockModel -> com.potatoandtomato.games.a.a.a:
    11:11:void <init>() -> <init>
    14:15:com.potatoandtomato.games.models.ImagePair mockImagePair() -> a
    19:21:com.potatoandtomato.games.models.ImageDetails mockImageDetails(java.lang.String) -> a
    25:69:com.potatoandtomato.games.models.ImageDetails mockImageDetails() -> b
com.potatoandtomato.games.assets.Animations -> com.potatoandtomato.games.assets.Animations:
    15:16:void <init>(com.potatoandtomato.common.absints.PTAssetsManager) -> <init>
    19:20:void disposeAnimation(com.potatoandtomato.games.assets.Animations$Name) -> a
com.potatoandtomato.games.assets.Animations$Name -> com.potatoandtomato.games.assets.Animations$a:
    com.potatoandtomato.games.assets.Animations$Name KNIGHT_WALK -> a
    com.potatoandtomato.games.assets.Animations$Name KNIGHT_RUN -> b
    com.potatoandtomato.games.assets.Animations$Name KNIGHT_ATK -> c
    com.potatoandtomato.games.assets.Animations$Name KNIGHT_WON -> d
    com.potatoandtomato.games.assets.Animations$Name KING_NORMAL -> e
    com.potatoandtomato.games.assets.Animations$Name KING_PANIC -> f
    com.potatoandtomato.games.assets.Animations$Name KING_WIN -> g
    com.potatoandtomato.games.assets.Animations$Name KING_LOSE -> h
    com.potatoandtomato.games.assets.Animations$Name KNIGHT_HANDUP -> i
    com.potatoandtomato.games.assets.Animations$Name[] $VALUES -> j
    22:22:com.potatoandtomato.games.assets.Animations$Name[] values() -> values
    22:22:com.potatoandtomato.games.assets.Animations$Name valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:25:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts -> com.potatoandtomato.games.assets.Fonts:
    14:15:void <init>(com.potatoandtomato.common.absints.PTAssetsManager) -> <init>
    19:22:void loadFonts() -> loadFonts
    26:27:void setFontDetailsGenerator() -> setFontDetailsGenerator
com.potatoandtomato.games.assets.Fonts$1 -> com.potatoandtomato.games.assets.Fonts$1:
    int[] $SwitchMap$com$potatoandtomato$games$assets$Fonts$FontName -> a
    int[] $SwitchMap$com$potatoandtomato$games$assets$Fonts$FontStyle -> b
    int[] $SwitchMap$com$potatoandtomato$games$assets$Fonts$FontSize -> c
    53:99:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts$FontId -> com.potatoandtomato.games.assets.Fonts$a:
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_XS_REGULAR -> a
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_XS_REGULAR_B_ffffff_000000_1 -> b
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_M_REGULAR_B_ffffff_000000_2 -> c
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_M_REGULAR -> d
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_M_REGULAR_B_ffffff_8e4403_2 -> e
    com.potatoandtomato.games.assets.Fonts$FontId MYRIAD_L_REGULAR -> f
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_XL_REGULAR -> g
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_XXL_REGULAR -> h
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_XXXL_REGULAR -> i
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_XXXL_REGULAR_B_FFFFFF_0c0904_2 -> j
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_MAX_REGULAR -> k
    com.potatoandtomato.games.assets.Fonts$FontId ENCHANTED_MAX_REGULAR_B_FFFFFF_563500_4 -> l
    com.potatoandtomato.games.assets.Fonts$FontId[] $VALUES -> m
    29:29:com.potatoandtomato.games.assets.Fonts$FontId[] values() -> values
    29:29:com.potatoandtomato.games.assets.Fonts$FontId valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:42:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts$FontName -> com.potatoandtomato.games.assets.Fonts$b:
    com.potatoandtomato.games.assets.Fonts$FontName PIZZA -> a
    com.potatoandtomato.games.assets.Fonts$FontName MYRIAD -> b
    com.potatoandtomato.games.assets.Fonts$FontName HELVETICA -> c
    com.potatoandtomato.games.assets.Fonts$FontName ENCHANTED -> d
    com.potatoandtomato.games.assets.Fonts$FontName[] $VALUES -> e
    121:121:com.potatoandtomato.games.assets.Fonts$FontName[] values() -> values
    121:121:com.potatoandtomato.games.assets.Fonts$FontName valueOf(java.lang.String) -> valueOf
    121:121:void <init>(java.lang.String,int) -> <init>
    121:122:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts$FontSize -> com.potatoandtomato.games.assets.Fonts$c:
    com.potatoandtomato.games.assets.Fonts$FontSize XS -> a
    com.potatoandtomato.games.assets.Fonts$FontSize S -> b
    com.potatoandtomato.games.assets.Fonts$FontSize M -> c
    com.potatoandtomato.games.assets.Fonts$FontSize L -> d
    com.potatoandtomato.games.assets.Fonts$FontSize XL -> e
    com.potatoandtomato.games.assets.Fonts$FontSize XXL -> f
    com.potatoandtomato.games.assets.Fonts$FontSize XXXL -> g
    com.potatoandtomato.games.assets.Fonts$FontSize MAX -> h
    com.potatoandtomato.games.assets.Fonts$FontSize[] $VALUES -> i
    129:129:com.potatoandtomato.games.assets.Fonts$FontSize[] values() -> values
    129:129:com.potatoandtomato.games.assets.Fonts$FontSize valueOf(java.lang.String) -> valueOf
    129:129:void <init>(java.lang.String,int) -> <init>
    129:130:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts$FontStyle -> com.potatoandtomato.games.assets.Fonts$d:
    com.potatoandtomato.games.assets.Fonts$FontStyle SEMIBOLD -> a
    com.potatoandtomato.games.assets.Fonts$FontStyle REGULAR -> b
    com.potatoandtomato.games.assets.Fonts$FontStyle BOLD -> c
    com.potatoandtomato.games.assets.Fonts$FontStyle CONDENSED -> d
    com.potatoandtomato.games.assets.Fonts$FontStyle ITALIC -> e
    com.potatoandtomato.games.assets.Fonts$FontStyle HEAVY -> f
    com.potatoandtomato.games.assets.Fonts$FontStyle BlACKCONDENSEDITALIC -> g
    com.potatoandtomato.games.assets.Fonts$FontStyle[] $VALUES -> h
    125:125:com.potatoandtomato.games.assets.Fonts$FontStyle[] values() -> values
    125:125:com.potatoandtomato.games.assets.Fonts$FontStyle valueOf(java.lang.String) -> valueOf
    125:125:void <init>(java.lang.String,int) -> <init>
    125:126:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Fonts$MyFontDetailsGenerator -> com.potatoandtomato.games.assets.Fonts$MyFontDetailsGenerator:
    com.potatoandtomato.games.assets.Fonts this$0 -> a
    45:45:void <init>(com.potatoandtomato.games.assets.Fonts) -> <init>
    49:93:java.lang.String getPath(java.lang.String,java.lang.String) -> getPath
    98:117:int getSize(java.lang.String) -> getSize
    45:45:void <init>(com.potatoandtomato.games.assets.Fonts,com.potatoandtomato.games.assets.Fonts$1) -> <init>
com.potatoandtomato.games.assets.MyAssets -> com.potatoandtomato.games.assets.MyAssets:
    com.potatoandtomato.games.assets.Textures textures -> a
    com.potatoandtomato.games.assets.Sounds sounds -> b
    com.potatoandtomato.games.assets.Animations animations -> c
    19:23:void <init>(com.potatoandtomato.common.absints.PTAssetsManager,com.potatoandtomato.common.assets.FontAssets,com.potatoandtomato.games.assets.Animations,com.potatoandtomato.games.assets.Sounds,com.potatoandtomato.common.assets.PatchAssets,com.potatoandtomato.games.assets.Textures) -> <init>
    27:27:com.potatoandtomato.games.assets.Textures getTextures() -> a
    32:32:com.potatoandtomato.games.assets.Sounds getSounds() -> b
    37:37:com.potatoandtomato.games.assets.Animations getAnimations() -> c
    11:11:com.potatoandtomato.common.assets.TextureAssets getTextures() -> getTextures
    11:11:com.potatoandtomato.common.assets.AnimationAssets getAnimations() -> getAnimations
    11:11:com.potatoandtomato.common.assets.SoundAssets getSounds() -> getSounds
com.potatoandtomato.games.assets.Patches -> com.potatoandtomato.games.assets.Patches:
    13:14:void <init>(com.potatoandtomato.common.absints.PTAssetsManager) -> <init>
com.potatoandtomato.games.assets.Patches$Name -> com.potatoandtomato.games.assets.Patches$a:
    com.potatoandtomato.games.assets.Patches$Name WHITE_ROUNDED_BG -> a
    com.potatoandtomato.games.assets.Patches$Name RED_ARROW -> b
    com.potatoandtomato.games.assets.Patches$Name BLACK_TRANS_BG -> c
    com.potatoandtomato.games.assets.Patches$Name GAME_OVER_TRANS_BG -> d
    com.potatoandtomato.games.assets.Patches$Name[] $VALUES -> e
    16:16:com.potatoandtomato.games.assets.Patches$Name[] values() -> values
    16:16:com.potatoandtomato.games.assets.Patches$Name valueOf(java.lang.String) -> valueOf
    16:16:void <init>(java.lang.String,int) -> <init>
    16:17:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Sounds -> com.potatoandtomato.games.assets.Sounds:
    14:15:void <init>(com.potatoandtomato.common.absints.PTAssetsManager) -> <init>
    18:18:com.badlogic.gdx.audio.Sound getClickSound(int) -> a
com.potatoandtomato.games.assets.Sounds$Name -> com.potatoandtomato.games.assets.Sounds$a:
    com.potatoandtomato.games.assets.Sounds$Name BONUS_MUSIC -> a
    com.potatoandtomato.games.assets.Sounds$Name BEFORE_START_GAME_MUSIC -> b
    com.potatoandtomato.games.assets.Sounds$Name GAME_PLAYING_MUSIC -> c
    com.potatoandtomato.games.assets.Sounds$Name BEFORE_BONUS_MUSIC -> d
    com.potatoandtomato.games.assets.Sounds$Name GAME_OVER_MUSIC -> e
    com.potatoandtomato.games.assets.Sounds$Name KNIGHT_ATTACKING -> f
    com.potatoandtomato.games.assets.Sounds$Name KNIGHT_RUN -> g
    com.potatoandtomato.games.assets.Sounds$Name KNIGHT_ARMOR -> h
    com.potatoandtomato.games.assets.Sounds$Name SHOCK -> i
    com.potatoandtomato.games.assets.Sounds$Name WRONG -> j
    com.potatoandtomato.games.assets.Sounds$Name MOVE_ROCK -> k
    com.potatoandtomato.games.assets.Sounds$Name HINT -> l
    com.potatoandtomato.games.assets.Sounds$Name WIN -> m
    com.potatoandtomato.games.assets.Sounds$Name ADDING_SCORE -> n
    com.potatoandtomato.games.assets.Sounds$Name START_STAGE -> o
    com.potatoandtomato.games.assets.Sounds$Name ATTACKING_CASTLE_MUSIC -> p
    com.potatoandtomato.games.assets.Sounds$Name FALL_DOWN -> q
    com.potatoandtomato.games.assets.Sounds$Name KNIGHT_WON -> r
    com.potatoandtomato.games.assets.Sounds$Name WRINKLE_PAPER -> s
    com.potatoandtomato.games.assets.Sounds$Name INVERTED -> t
    com.potatoandtomato.games.assets.Sounds$Name COVERED_PRESS -> u
    com.potatoandtomato.games.assets.Sounds$Name TORCH_LIGHT -> v
    com.potatoandtomato.games.assets.Sounds$Name LOOPING -> w
    com.potatoandtomato.games.assets.Sounds$Name DISALLOW_CLICK -> x
    com.potatoandtomato.games.assets.Sounds$Name SWITCH_LIGHT -> y
    com.potatoandtomato.games.assets.Sounds$Name BULB_BREAK -> z
    com.potatoandtomato.games.assets.Sounds$Name MEMORY -> A
    com.potatoandtomato.games.assets.Sounds$Name MEMORY_END -> B
    com.potatoandtomato.games.assets.Sounds$Name PUT_EGGS -> C
    com.potatoandtomato.games.assets.Sounds$Name BREAK_EGG -> D
    com.potatoandtomato.games.assets.Sounds$Name MONSTER_SOUND -> E
    com.potatoandtomato.games.assets.Sounds$Name MOVE_IN_FOREST -> F
    com.potatoandtomato.games.assets.Sounds$Name CAT -> G
    com.potatoandtomato.games.assets.Sounds$Name BOY_LAUGH -> H
    com.potatoandtomato.games.assets.Sounds$Name CAR_REVERSE -> I
    com.potatoandtomato.games.assets.Sounds$Name CAR_DRIVING -> J
    com.potatoandtomato.games.assets.Sounds$Name CAR_BRAKE -> K
    com.potatoandtomato.games.assets.Sounds$Name HAPPY_BIRTHDAY -> L
    com.potatoandtomato.games.assets.Sounds$Name JINGLE_BELL -> M
    com.potatoandtomato.games.assets.Sounds$Name SEXY_GIRL -> N
    com.potatoandtomato.games.assets.Sounds$Name BABY -> O
    com.potatoandtomato.games.assets.Sounds$Name RUNNING -> P
    com.potatoandtomato.games.assets.Sounds$Name CROWD_APPLAUSE -> Q
    com.potatoandtomato.games.assets.Sounds$Name UFO -> R
    com.potatoandtomato.games.assets.Sounds$Name ROCKET_LAUNCH -> S
    com.potatoandtomato.games.assets.Sounds$Name ROCKET_SLOW_FLY -> T
    com.potatoandtomato.games.assets.Sounds$Name CASTLE_DESTROYED -> U
    com.potatoandtomato.games.assets.Sounds$Name PAPYRUS -> V
    com.potatoandtomato.games.assets.Sounds$Name[] $VALUES -> W
    21:21:com.potatoandtomato.games.assets.Sounds$Name[] values() -> values
    21:21:com.potatoandtomato.games.assets.Sounds$Name valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:34:void <clinit>() -> <clinit>
com.potatoandtomato.games.assets.Textures -> com.potatoandtomato.games.assets.Textures:
    14:15:void <init>(com.potatoandtomato.common.absints.PTAssetsManager,java.lang.String) -> <init>
    18:18:com.badlogic.gdx.graphics.g2d.TextureRegion getPlayerCountBg(int) -> a
com.potatoandtomato.games.assets.Textures$Name -> com.potatoandtomato.games.assets.Textures$a:
    com.potatoandtomato.games.assets.Textures$Name EMPTY -> a
    com.potatoandtomato.games.assets.Textures$Name TOP_BG -> b
    com.potatoandtomato.games.assets.Textures$Name TOP_BG_SHADOW -> c
    com.potatoandtomato.games.assets.Textures$Name HINT_BLOCK -> d
    com.potatoandtomato.games.assets.Textures$Name BOTTOM_BG -> e
    com.potatoandtomato.games.assets.Textures$Name BOTTOM_BG_SHADOW -> f
    com.potatoandtomato.games.assets.Textures$Name CASTLE_ROOM -> g
    com.potatoandtomato.games.assets.Textures$Name START_GAME_SCENE -> h
    com.potatoandtomato.games.assets.Textures$Name GEAR_ICON -> i
    com.potatoandtomato.games.assets.Textures$Name TRUMPET -> j
    com.potatoandtomato.games.assets.Textures$Name TRUMPET_LEFT_TRACE -> k
    com.potatoandtomato.games.assets.Textures$Name TRUMPET_RIGHT_TRACE -> l
    com.potatoandtomato.games.assets.Textures$Name SPECIAL_STAGE -> m
    com.potatoandtomato.games.assets.Textures$Name GAME_OVER_SCENE -> n
    com.potatoandtomato.games.assets.Textures$Name WHITE_CIRCLE -> o
    com.potatoandtomato.games.assets.Textures$Name CASTLE_SEMI_DESTROYED -> p
    com.potatoandtomato.games.assets.Textures$Name CASTLE_DESTROYED -> q
    com.potatoandtomato.games.assets.Textures$Name HINT_ON_ICON -> r
    com.potatoandtomato.games.assets.Textures$Name HINT_OFF_ICON -> s
    com.potatoandtomato.games.assets.Textures$Name SMALL_STAR_ICON -> t
    com.potatoandtomato.games.assets.Textures$Name STOP_ICON -> u
    com.potatoandtomato.games.assets.Textures$Name TRANS_BLACK_BG -> v
    com.potatoandtomato.games.assets.Textures$Name CURSOR_BLACK -> w
    com.potatoandtomato.games.assets.Textures$Name CASTLE_DOOR -> x
    com.potatoandtomato.games.assets.Textures$Name SHIELD_SWORD -> y
    com.potatoandtomato.games.assets.Textures$Name SCRATCH_SEPARATOR -> z
    com.potatoandtomato.games.assets.Textures$Name STAR -> A
    com.potatoandtomato.games.assets.Textures$Name SWORD_SEPARATOR -> B
    com.potatoandtomato.games.assets.Textures$Name CROSS -> C
    com.potatoandtomato.games.assets.Textures$Name CIRCLE_FAT -> D
    com.potatoandtomato.games.assets.Textures$Name CIRCLE_TALL -> E
    com.potatoandtomato.games.assets.Textures$Name CIRCLE_BIG -> F
    com.potatoandtomato.games.assets.Textures$Name CIRCLE_SMALL -> G
    com.potatoandtomato.games.assets.Textures$Name CIRCLE_MEDIUM -> H
    com.potatoandtomato.games.assets.Textures$Name PLAYER$1_COUNTER -> I
    com.potatoandtomato.games.assets.Textures$Name ICE_BOTTOM_HALF -> J
    com.potatoandtomato.games.assets.Textures$Name ICE_TOP_HALF -> K
    com.potatoandtomato.games.assets.Textures$Name PAPYRUS_START -> L
    com.potatoandtomato.games.assets.Textures$Name PAPYRUS_END -> M
    com.potatoandtomato.games.assets.Textures$Name PAPYRUS -> N
    com.potatoandtomato.games.assets.Textures$Name BULB_BROKEN -> O
    com.potatoandtomato.games.assets.Textures$Name BULB_LIGHT_OFF -> P
    com.potatoandtomato.games.assets.Textures$Name BULB_LIGHT_ON -> Q
    com.potatoandtomato.games.assets.Textures$Name FULL_BLACK_BG -> R
    com.potatoandtomato.games.assets.Textures$Name VIGNETTE -> S
    com.potatoandtomato.games.assets.Textures$Name MONSTERS_INVERT -> T
    com.potatoandtomato.games.assets.Textures$Name MONSTERS -> U
    com.potatoandtomato.games.assets.Textures$Name CAT -> V
    com.potatoandtomato.games.assets.Textures$Name GIRAFFE -> W
    com.potatoandtomato.games.assets.Textures$Name VAMPIRE -> X
    com.potatoandtomato.games.assets.Textures$Name VAN -> Y
    com.potatoandtomato.games.assets.Textures$Name BIRTHDAY -> Z
    com.potatoandtomato.games.assets.Textures$Name SANTA_LEFT -> aa
    com.potatoandtomato.games.assets.Textures$Name DEER_RIGHT -> ab
    com.potatoandtomato.games.assets.Textures$Name SEXY_GIRL -> ac
    com.potatoandtomato.games.assets.Textures$Name MAN_GIVE_FLOWER -> ad
    com.potatoandtomato.games.assets.Textures$Name MAN_RUNNING -> ae
    com.potatoandtomato.games.assets.Textures$Name PREGNANT -> af
    com.potatoandtomato.games.assets.Textures$Name CROWD -> ag
    com.potatoandtomato.games.assets.Textures$Name SPEECH -> ah
    com.potatoandtomato.games.assets.Textures$Name ROCKET -> ai
    com.potatoandtomato.games.assets.Textures$Name UFO -> aj
    com.potatoandtomato.games.assets.Textures$Name ALIEN -> ak
    com.potatoandtomato.games.assets.Textures$Name WRINKLE_BG -> al
    com.potatoandtomato.games.assets.Textures$Name COVERED -> am
    com.potatoandtomato.games.assets.Textures$Name EGG -> an
    com.potatoandtomato.games.assets.Textures$Name YOLK -> ao
    com.potatoandtomato.games.assets.Textures$Name WHITE_BG -> ap
    com.potatoandtomato.games.assets.Textures$Name[] $VALUES -> aq
    21:21:com.potatoandtomato.games.assets.Textures$Name[] values() -> values
    21:21:com.potatoandtomato.games.assets.Textures$Name valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:42:void <clinit>() -> <clinit>
com.potatoandtomato.games.controls.Circle -> com.potatoandtomato.games.b.a:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> b
    com.badlogic.gdx.graphics.Color userColor -> c
    23:49:void <init>(com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.Services,java.lang.String,com.potatoandtomato.games.models.SimpleRectangle) -> <init>
com.potatoandtomato.games.controls.Cross -> com.potatoandtomato.games.b.b:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> b
    com.badlogic.gdx.graphics.Color userColor -> c
    21:29:void <init>(com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.Services,java.lang.String) -> <init>
com.potatoandtomato.games.controls.DummyButton -> com.potatoandtomato.games.b.c:
    15:18:void <init>(com.badlogic.gdx.scenes.scene2d.ui.Table,com.potatoandtomato.common.assets.Assets) -> <init>
com.potatoandtomato.games.enums.BonusType -> com.potatoandtomato.games.enums.BonusType:
    com.potatoandtomato.games.enums.BonusType NONE -> a
    com.potatoandtomato.games.enums.BonusType INVERTED -> b
    com.potatoandtomato.games.enums.BonusType LOOPING -> c
    com.potatoandtomato.games.enums.BonusType ONE_PERSON -> d
    com.potatoandtomato.games.enums.BonusType LIGHTING -> e
    com.potatoandtomato.games.enums.BonusType MEMORY -> f
    com.potatoandtomato.games.enums.BonusType TORCH_LIGHT -> g
    com.potatoandtomato.games.enums.BonusType DISTRACTION -> h
    com.potatoandtomato.games.enums.BonusType WRINKLE -> i
    com.potatoandtomato.games.enums.BonusType COVERED -> j
    com.potatoandtomato.games.enums.BonusType EGG -> k
    java.util.List VALUES -> l
    int SIZE -> m
    java.util.Random RANDOM -> n
    com.potatoandtomato.games.enums.BonusType[] $VALUES -> o
    11:11:com.potatoandtomato.games.enums.BonusType[] values() -> values
    11:11:com.potatoandtomato.games.enums.BonusType valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    30:34:com.potatoandtomato.games.enums.BonusType random() -> a
    11:27:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.CastleState -> com.potatoandtomato.games.enums.CastleState:
    com.potatoandtomato.games.enums.CastleState Normal -> a
    com.potatoandtomato.games.enums.CastleState Semi_Destroyed -> b
    com.potatoandtomato.games.enums.CastleState Destroyed -> c
    com.potatoandtomato.games.enums.CastleState[] $VALUES -> d
    6:6:com.potatoandtomato.games.enums.CastleState[] values() -> values
    6:6:com.potatoandtomato.games.enums.CastleState valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.GameState -> com.potatoandtomato.games.enums.GameState:
    com.potatoandtomato.games.enums.GameState BeforeNewGame -> a
    com.potatoandtomato.games.enums.GameState BeforeContinue -> b
    com.potatoandtomato.games.enums.GameState BeforeBouns -> c
    com.potatoandtomato.games.enums.GameState PrePlaying -> d
    com.potatoandtomato.games.enums.GameState Playing -> e
    com.potatoandtomato.games.enums.GameState Pause -> f
    com.potatoandtomato.games.enums.GameState Won -> g
    com.potatoandtomato.games.enums.GameState WonWithoutContributions -> h
    com.potatoandtomato.games.enums.GameState Lose -> i
    com.potatoandtomato.games.enums.GameState WaitingForNextStage -> j
    com.potatoandtomato.games.enums.GameState BlockingReview -> k
    com.potatoandtomato.games.enums.GameState[] $VALUES -> l
    6:6:com.potatoandtomato.games.enums.GameState[] values() -> values
    6:6:com.potatoandtomato.games.enums.GameState valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:15:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.KingState -> com.potatoandtomato.games.enums.KingState:
    com.potatoandtomato.games.enums.KingState Normal -> a
    com.potatoandtomato.games.enums.KingState Panic -> b
    com.potatoandtomato.games.enums.KingState Win -> c
    com.potatoandtomato.games.enums.KingState Lose -> d
    com.potatoandtomato.games.enums.KingState[] $VALUES -> e
    6:6:com.potatoandtomato.games.enums.KingState[] values() -> values
    6:6:com.potatoandtomato.games.enums.KingState valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.KnightState -> com.potatoandtomato.games.enums.KnightState:
    com.potatoandtomato.games.enums.KnightState Walk -> a
    com.potatoandtomato.games.enums.KnightState Run -> b
    com.potatoandtomato.games.enums.KnightState Attack -> c
    com.potatoandtomato.games.enums.KnightState Won -> d
    com.potatoandtomato.games.enums.KnightState[] $VALUES -> e
    6:6:com.potatoandtomato.games.enums.KnightState[] values() -> values
    6:6:com.potatoandtomato.games.enums.KnightState valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.PapyrusType -> com.potatoandtomato.games.enums.PapyrusType:
    com.potatoandtomato.games.enums.PapyrusType BeforeContinue -> a
    com.potatoandtomato.games.enums.PapyrusType BeforeNewGame -> b
    com.potatoandtomato.games.enums.PapyrusType Bonus -> c
    com.potatoandtomato.games.enums.PapyrusType GameOver -> d
    com.potatoandtomato.games.enums.PapyrusType[] $VALUES -> e
    6:6:com.potatoandtomato.games.enums.PapyrusType[] values() -> values
    6:6:com.potatoandtomato.games.enums.PapyrusType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:8:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.RoomMsgType -> com.potatoandtomato.games.enums.RoomMsgType:
    com.potatoandtomato.games.enums.RoomMsgType Touched -> a
    com.potatoandtomato.games.enums.RoomMsgType Won -> b
    com.potatoandtomato.games.enums.RoomMsgType Lose -> c
    com.potatoandtomato.games.enums.RoomMsgType Download -> d
    com.potatoandtomato.games.enums.RoomMsgType NextStage -> e
    com.potatoandtomato.games.enums.RoomMsgType StartPlaying -> f
    com.potatoandtomato.games.enums.RoomMsgType[] $VALUES -> g
    6:6:com.potatoandtomato.games.enums.RoomMsgType[] values() -> values
    6:6:com.potatoandtomato.games.enums.RoomMsgType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:13:void <clinit>() -> <clinit>
com.potatoandtomato.games.enums.StageType -> com.potatoandtomato.games.enums.StageType:
    com.potatoandtomato.games.enums.StageType Normal -> a
    com.potatoandtomato.games.enums.StageType Bonus -> b
    com.potatoandtomato.games.enums.StageType[] $VALUES -> c
    6:6:com.potatoandtomato.games.enums.StageType[] values() -> values
    6:6:com.potatoandtomato.games.enums.StageType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:7:void <clinit>() -> <clinit>
com.potatoandtomato.games.helpers.ArrayLists -> com.potatoandtomato.games.c.a:
    11:11:void <init>() -> <init>
    14:18:java.util.ArrayList randomNumericArray(int,int,int) -> a
com.potatoandtomato.games.helpers.Logs -> com.potatoandtomato.games.c.b:
    8:8:void <init>() -> <init>
    12:13:void show(java.lang.String) -> a
com.potatoandtomato.games.helpers.NotifyRunnable -> com.potatoandtomato.games.c.c:
    boolean finish -> a
    6:6:void <init>() -> <init>
    11:11:boolean isFinish() -> a
    15:16:void setFinish(boolean) -> a
    21:21:void run() -> run
com.potatoandtomato.games.helpers.Positions -> com.potatoandtomato.games.c.d:
    9:9:void <init>() -> <init>
    12:12:float centerY(float,float) -> a
    16:16:float centerX(float,float) -> b
    20:24:com.badlogic.gdx.math.Vector2 actorLocalToStageCoord(com.badlogic.gdx.scenes.scene2d.Actor) -> a
com.potatoandtomato.games.helpers.Sizes -> com.potatoandtomato.games.c.e:
    9:9:void <init>() -> <init>
    12:13:com.badlogic.gdx.math.Vector2 resize(float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    17:18:com.badlogic.gdx.math.Vector2 resizeByH(float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> b
com.potatoandtomato.games.helpers.Strings -> com.potatoandtomato.games.c.f:
    8:8:void <init>() -> <init>
    11:14:java.lang.String cut(java.lang.String,int) -> a
    18:24:java.lang.String join(java.util.ArrayList) -> a
com.potatoandtomato.games.models.CorrectArea -> com.potatoandtomato.games.models.CorrectArea:
    int topLeftX -> a
    int bottomRightX -> b
    int topLeftY -> c
    int bottomRightY -> d
    13:14:void <init>() -> <init>
    17:18:void setTopLeftX(int) -> setTopLeftX
    21:22:void setBottomRightX(int) -> setBottomRightX
    25:26:void setTopLeftY(int) -> setTopLeftY
    29:30:void setBottomRightY(int) -> setBottomRightY
    33:33:int getTopLeftX() -> getTopLeftX
    37:37:int getBottomRightX() -> getBottomRightX
    41:41:int getTopLeftY() -> getTopLeftY
    45:45:int getBottomRightY() -> getBottomRightY
com.potatoandtomato.games.models.GameModel -> com.potatoandtomato.games.models.GameModel:
    int stageNumber -> a
    java.util.HashMap userRecords -> b
    com.potatoandtomato.common.utils.SafeDouble score -> c
    com.potatoandtomato.games.enums.GameState gameState -> d
    java.util.ArrayList handledAreas -> e
    int remainingMiliSecs -> f
    int hintsLeft -> g
    int castleAttackedCount -> h
    int freezingMiliSecs -> i
    boolean continueChanceUsed -> j
    com.potatoandtomato.games.models.ImageDetails imageDetails -> k
    com.potatoandtomato.games.enums.StageType stageType -> l
    java.util.ArrayList listeners -> m
    39:46:void <init>(int,double) -> <init>
    48:53:void <init>() -> <init>
    56:67:void copyGameModelDataToThis(com.potatoandtomato.games.models.GameModel) -> a
    70:70:boolean isContinueChanceUsed() -> a
    74:75:void setContinueChanceUsed(boolean) -> setContinueChanceUsed
    78:78:int getCastleAttackedCount() -> getCastleAttackedCount
    82:86:void setCastleAttackedCount(int) -> setCastleAttackedCount
    89:89:com.potatoandtomato.games.enums.StageType getStageType() -> getStageType
    94:98:void setStageType(com.potatoandtomato.games.enums.StageType) -> setStageType
    101:101:com.potatoandtomato.games.models.ImageDetails getImageDetails() -> getImageDetails
    105:106:void setImageDetails(com.potatoandtomato.games.models.ImageDetails) -> setImageDetails
    109:109:int getHintsLeft() -> getHintsLeft
    113:119:void setHintsLeft(int) -> setHintsLeft
    122:125:void minusHintLeft() -> b
    128:128:int getRemainingMiliSecs() -> getRemainingMiliSecs
    132:133:void setRemainingMiliSecs(int) -> setRemainingMiliSecs
    136:151:void setRemainingMiliSecs(int,boolean) -> setRemainingMiliSecs
    154:155:void minusRemainingMiliSecs(int) -> a
    158:158:int getFreezingMiliSecs() -> getFreezingMiliSecs
    162:166:void setFreezingMiliSecs(int) -> setFreezingMiliSecs
    169:179:void addFreezeMiliSecs() -> c
    182:182:java.util.HashMap getUserRecords() -> getUserRecords
    186:187:void setUserRecords(java.util.HashMap) -> setUserRecords
    190:190:java.util.ArrayList getHandledAreas() -> getHandledAreas
    194:198:void setHandledAreas(java.util.ArrayList) -> setHandledAreas
    201:201:com.potatoandtomato.games.enums.GameState getGameState() -> getGameState
    205:216:void setGameState(com.potatoandtomato.games.enums.GameState) -> setGameState
    220:223:java.lang.Double getScore() -> getScore
    227:228:void setScore(java.lang.Double) -> setScore
    231:244:void setScore(java.lang.Double,boolean) -> setScore
    247:247:int getStageNumber() -> getStageNumber
    251:255:void setStageNumber(int) -> setStageNumber
    259:260:void addStageNumber() -> d
    264:266:void convertStageNumberToRemainingMiliSecs() -> e
    270:280:int getThisStageTotalMiliSecs() -> getThisStageTotalMiliSecs
    285:285:int getThisStageTotalMovingMiliSecs() -> getThisStageTotalMovingMiliSecs
    290:291:int getThisStageTotalAtkMiliSecs() -> getThisStageTotalAtkMiliSecs
    297:307:void addUserClickedCount(java.lang.String) -> a
    311:315:int getUserClickedCount(java.lang.String) -> getUserClickedCount
    321:326:boolean isAreaAlreadyHandled(com.potatoandtomato.games.models.SimpleRectangle) -> a
    331:339:boolean isAreaAlreadyHandled(com.badlogic.gdx.math.Rectangle) -> a
    344:351:boolean addHandledArea(com.potatoandtomato.games.models.SimpleRectangle,int) -> a
    356:361:boolean isAreaAlreadyConfirmClicked(com.potatoandtomato.games.models.SimpleRectangle) -> b
    366:371:void setConfirmAreaClickedBy(com.potatoandtomato.games.models.SimpleRectangle,java.lang.String) -> setConfirmAreaClickedBy
    375:376:void clearHandledAreas() -> f
    380:386:java.lang.String toJson() -> g
    391:392:com.potatoandtomato.games.absintf.GameModelListener addGameModelListener(com.potatoandtomato.games.absintf.GameModelListener) -> a
    397:398:void removeGameModelListener(com.potatoandtomato.games.absintf.GameModelListener) -> b
    402:402:boolean isPlaying() -> h
    408:409:boolean isNextStageBonus() -> i
    413:414:void dispose() -> j
com.potatoandtomato.games.models.ImageDetails -> com.potatoandtomato.games.models.ImageDetails:
    com.potatoandtomato.games.models.CorrectArea area1 -> a
    com.potatoandtomato.games.models.CorrectArea area2 -> b
    com.potatoandtomato.games.models.CorrectArea area3 -> c
    com.potatoandtomato.games.models.CorrectArea area4 -> d
    com.potatoandtomato.games.models.CorrectArea area5 -> e
    int width -> f
    int height -> g
    int index -> h
    java.lang.String imageOneUrl -> i
    java.lang.String imageTwoUrl -> j
    java.lang.String id -> k
    int gameImageWidth -> l
    int gameImageHeight -> m
    java.util.ArrayList correctRectangles -> n
    31:33:void <init>() -> <init>
    36:36:java.lang.String getId() -> getId
    40:41:void setId(java.lang.String) -> setId
    44:44:int getIndex() -> getIndex
    48:49:void setIndex(int) -> setIndex
    52:52:java.lang.String getImageOneUrl() -> getImageOneUrl
    56:57:void setImageOneUrl(java.lang.String) -> setImageOneUrl
    60:60:java.lang.String getImageTwoUrl() -> getImageTwoUrl
    64:65:void setImageTwoUrl(java.lang.String) -> setImageTwoUrl
    68:68:int getHeight() -> getHeight
    72:73:void setHeight(int) -> setHeight
    76:76:int getWidth() -> getWidth
    80:81:void setWidth(int) -> setWidth
    84:84:com.potatoandtomato.games.models.CorrectArea getArea5() -> getArea5
    88:89:void setArea5(com.potatoandtomato.games.models.CorrectArea) -> setArea5
    92:92:com.potatoandtomato.games.models.CorrectArea getArea4() -> getArea4
    96:97:void setArea4(com.potatoandtomato.games.models.CorrectArea) -> setArea4
    100:100:com.potatoandtomato.games.models.CorrectArea getArea3() -> getArea3
    104:105:void setArea3(com.potatoandtomato.games.models.CorrectArea) -> setArea3
    108:108:com.potatoandtomato.games.models.CorrectArea getArea2() -> getArea2
    112:113:void setArea2(com.potatoandtomato.games.models.CorrectArea) -> setArea2
    116:116:com.potatoandtomato.games.models.CorrectArea getArea1() -> getArea1
    120:121:void setArea1(com.potatoandtomato.games.models.CorrectArea) -> setArea1
    127:129:void setGameImageSize(int,int) -> setGameImageSize
    134:142:java.util.ArrayList getCorrectRects() -> getCorrectRects
    147:151:java.util.ArrayList getCorrectSimpleRects() -> getCorrectSimpleRects
    156:162:java.util.ArrayList getTouchedCorrectRects(float,float) -> getTouchedCorrectRects
    167:172:com.badlogic.gdx.math.Rectangle convertAreaToRectangle(com.potatoandtomato.games.models.CorrectArea) -> a
    178:181:com.badlogic.gdx.math.Vector2 convertCoords(int,int,int,int,int,int) -> a
    186:186:int getGameImageHeight() -> getGameImageHeight
com.potatoandtomato.games.models.ImagePair -> com.potatoandtomato.games.models.ImagePair:
    com.potatoandtomato.games.models.ImageDetails imageDetails -> a
    com.badlogic.gdx.graphics.Texture imageOne -> b
    com.badlogic.gdx.graphics.Texture imageTwo -> c
    java.lang.Integer orderIndex -> d
    15:20:void <init>(com.potatoandtomato.games.models.ImageDetails,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture,java.lang.Integer) -> <init>
    23:23:com.potatoandtomato.games.models.ImageDetails getImageDetails() -> getImageDetails
    27:28:void setImageDetails(com.potatoandtomato.games.models.ImageDetails) -> setImageDetails
    31:31:com.badlogic.gdx.graphics.Texture getImageOne() -> getImageOne
    35:36:void setImageOne(com.badlogic.gdx.graphics.Texture) -> setImageOne
    39:39:com.badlogic.gdx.graphics.Texture getImageTwo() -> getImageTwo
    43:44:void setImageTwo(com.badlogic.gdx.graphics.Texture) -> setImageTwo
    47:47:java.lang.Integer getOrderIndex() -> getOrderIndex
    51:52:void setOrderIndex(java.lang.Integer) -> setOrderIndex
com.potatoandtomato.games.models.LightTimingModel -> com.potatoandtomato.games.models.LightTimingModel:
    java.util.ArrayList timePeriodModels -> a
    16:18:void <init>() -> <init>
    21:21:java.util.ArrayList getTimePeriodModels() -> getTimePeriodModels
    25:26:void setTimePeriodModels(java.util.ArrayList) -> setTimePeriodModels
    29:35:void randomize() -> a
    38:44:java.lang.String toJson() -> b
com.potatoandtomato.games.models.Services -> com.potatoandtomato.games.models.Services:
    com.potatoandtomato.games.assets.MyAssets assets -> a
    com.potatoandtomato.games.services.SoundsWrapper soundsWrapper -> b
    com.potatoandtomato.games.services.Database database -> c
    com.potatoandtomato.games.services.Texts texts -> d
    com.potatoandtomato.games.services.RoomMsgHandler roomMsgHandler -> e
    22:28:void <init>(com.potatoandtomato.games.assets.MyAssets,com.potatoandtomato.games.services.SoundsWrapper,com.potatoandtomato.games.services.Database,com.potatoandtomato.games.services.Texts,com.potatoandtomato.games.services.RoomMsgHandler) -> <init>
    31:31:com.potatoandtomato.games.assets.MyAssets getAssets() -> getAssets
    35:35:com.potatoandtomato.games.services.SoundsWrapper getSoundsWrapper() -> getSoundsWrapper
    39:39:com.potatoandtomato.games.services.Database getDatabase() -> getDatabase
    43:43:com.potatoandtomato.games.services.Texts getTexts() -> getTexts
    47:47:com.potatoandtomato.games.services.RoomMsgHandler getRoomMsgHandler() -> getRoomMsgHandler
    51:52:void setRoomMsgHandler(com.potatoandtomato.games.services.RoomMsgHandler) -> setRoomMsgHandler
    55:56:void setDatabase(com.potatoandtomato.games.services.Database) -> setDatabase
    60:62:void dispose() -> dispose
com.potatoandtomato.games.models.SimpleRectangle -> com.potatoandtomato.games.models.SimpleRectangle:
    float width -> a
    float height -> b
    float x -> c
    float y -> d
    java.lang.String userId -> e
    16:21:void <init>(float,float,float,float) -> <init>
    23:24:void <init>() -> <init>
    26:31:void <init>(com.badlogic.gdx.math.Rectangle) -> <init>
    34:34:java.lang.String getUserId() -> getUserId
    38:39:void setUserId(java.lang.String) -> setUserId
    42:42:float getWidth() -> getWidth
    46:47:void setWidth(float) -> setWidth
    50:50:float getHeight() -> getHeight
    54:55:void setHeight(float) -> setHeight
    58:58:float getX() -> getX
    62:63:void setX(float) -> setX
    66:66:float getY() -> getY
    70:71:void setY(float) -> setY
    75:83:boolean equals(java.lang.Object) -> equals
com.potatoandtomato.games.models.TimePeriodModel -> com.potatoandtomato.games.models.TimePeriodModel:
    float start -> a
    float end -> b
    11:12:void <init>() -> <init>
    14:17:void <init>(float,float) -> <init>
    20:20:float getEnd() -> getEnd
    24:25:void setEnd(float) -> setEnd
    28:28:float getStart() -> getStart
    32:33:void setStart(float) -> setStart
com.potatoandtomato.games.models.TouchedPoint -> com.potatoandtomato.games.models.TouchedPoint:
    float x -> a
    float y -> b
    int remainingMiliSecs -> c
    int hintLeft -> d
    com.potatoandtomato.games.models.SimpleRectangle correctRect -> e
    14:20:void <init>(float,float,int,int,com.potatoandtomato.games.models.SimpleRectangle) -> <init>
    22:23:void <init>() -> <init>
    26:26:com.potatoandtomato.games.models.SimpleRectangle getCorrectRect() -> getCorrectRect
    30:31:void setCorrectRect(com.potatoandtomato.games.models.SimpleRectangle) -> setCorrectRect
    34:34:int getHintLeft() -> getHintLeft
    38:39:void setHintLeft(int) -> setHintLeft
    42:42:float getX() -> getX
    46:47:void setX(float) -> setX
    50:50:float getY() -> getY
    54:55:void setY(float) -> setY
    58:58:int getRemainingMiliSecs() -> getRemainingMiliSecs
    62:63:void setRemainingMiliSecs(int) -> setRemainingMiliSecs
com.potatoandtomato.games.models.WonStageModel -> com.potatoandtomato.games.models.WonStageModel:
    int stageNumber -> a
    int beforeScore -> b
    int remainingSecs -> c
    int hintsLeft -> d
    java.lang.String nextStageId -> e
    com.potatoandtomato.games.enums.StageType nextStageType -> f
    17:18:void <init>() -> <init>
    20:27:void <init>(int,int,int,int,java.lang.String,com.potatoandtomato.games.enums.StageType) -> <init>
    30:30:int getHintsLeft() -> getHintsLeft
    34:35:void setHintsLeft(int) -> setHintsLeft
    38:38:com.potatoandtomato.games.enums.StageType getNextStageType() -> getNextStageType
    42:43:void setNextStageType(com.potatoandtomato.games.enums.StageType) -> setNextStageType
    46:46:java.lang.String getNextStageId() -> getNextStageId
    50:51:void setNextStageId(java.lang.String) -> setNextStageId
    54:54:int getRemainingSecs() -> getRemainingSecs
    58:59:void setRemainingSecs(int) -> setRemainingSecs
    62:62:int getBeforeScore() -> getBeforeScore
    66:67:void setBeforeScore(int) -> setBeforeScore
    70:70:int getStageNumber() -> getStageNumber
    74:75:void setStageNumber(int) -> setStageNumber
com.potatoandtomato.games.screens.hints.HintsActor -> com.potatoandtomato.games.screens.a.a:
    com.potatoandtomato.games.assets.MyAssets myAssets -> a
    com.potatoandtomato.games.models.Services services -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOnImage1 -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOnImage2 -> d
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOnImage3 -> e
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOffImage1 -> f
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOffImage2 -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image hintOffImage3 -> h
    com.badlogic.gdx.scenes.scene2d.ui.Image hintBlock -> i
    com.badlogic.gdx.scenes.scene2d.ui.Image recoverHintLightImage -> j
    31:36:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    39:82:void populate() -> a
    85:97:void setHintBlockVisible(boolean) -> a
    100:136:void refreshDesign(int) -> a
    140:140:com.badlogic.gdx.scenes.scene2d.ui.Image getHintBlock() -> b
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$000(com.potatoandtomato.games.screens.hints.HintsActor) -> a
    22:22:com.potatoandtomato.games.models.Services access$100(com.potatoandtomato.games.screens.hints.HintsActor) -> b
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$200(com.potatoandtomato.games.screens.hints.HintsActor) -> c
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$300(com.potatoandtomato.games.screens.hints.HintsActor) -> d
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$400(com.potatoandtomato.games.screens.hints.HintsActor) -> e
com.potatoandtomato.games.screens.hints.HintsActor$1 -> com.potatoandtomato.games.screens.a.a$1:
    boolean val$visible -> a
    com.potatoandtomato.games.screens.hints.HintsActor this$0 -> b
    85:85:void <init>(com.potatoandtomato.games.screens.hints.HintsActor,boolean) -> <init>
    88:95:void run() -> run
com.potatoandtomato.games.screens.hints.HintsActor$2 -> com.potatoandtomato.games.screens.a.a$2:
    int val$leftHints -> a
    com.potatoandtomato.games.screens.hints.HintsActor this$0 -> b
    100:100:void <init>(com.potatoandtomato.games.screens.hints.HintsActor,int) -> <init>
    103:134:void run() -> run
com.potatoandtomato.games.screens.hints.HintsLogic -> com.potatoandtomato.games.screens.a.b:
    com.potatoandtomato.games.screens.hints.HintsActor hintsActor -> a
    com.potatoandtomato.games.models.GameModel gameModel -> b
    int currentHintsLeft -> c
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> d
    com.potatoandtomato.games.absintf.HintsLogicListener hintsLogicListener -> e
    com.potatoandtomato.games.models.Services services -> f
    boolean isHintBlocked -> g
    int usedCount -> h
    27:36:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    39:47:void invalidate() -> a
    50:55:void refreshBlockHint() -> b
    58:59:void reviveAllHints() -> c
    62:106:void setListeners() -> f
    109:113:int getCurrentHintsLeft() -> d
    118:118:com.potatoandtomato.games.screens.hints.HintsActor getHintsActor() -> e
    122:123:void setHintsLogicListener(com.potatoandtomato.games.absintf.HintsLogicListener) -> a
    18:18:com.potatoandtomato.games.models.GameModel access$000(com.potatoandtomato.games.screens.hints.HintsLogic) -> a
    18:18:boolean access$100(com.potatoandtomato.games.screens.hints.HintsLogic) -> b
    18:18:com.potatoandtomato.games.absintf.HintsLogicListener access$200(com.potatoandtomato.games.screens.hints.HintsLogic) -> c
    18:18:int access$302(com.potatoandtomato.games.screens.hints.HintsLogic,int) -> a
com.potatoandtomato.games.screens.hints.HintsLogic$1 -> com.potatoandtomato.games.screens.a.b$1:
    com.potatoandtomato.games.screens.hints.HintsLogic this$0 -> a
    62:62:void <init>(com.potatoandtomato.games.screens.hints.HintsLogic) -> <init>
    66:83:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.hints.HintsLogic$2 -> com.potatoandtomato.games.screens.a.b$2:
    com.potatoandtomato.games.screens.hints.HintsLogic this$0 -> a
    86:86:void <init>(com.potatoandtomato.games.screens.hints.HintsLogic) -> <init>
    90:93:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
    97:98:void onHintChanged(int) -> e
    102:104:void onStageNumberChanged(int) -> a
com.potatoandtomato.games.screens.main.GameDataContract -> com.potatoandtomato.games.screens.main.GameDataContract:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    boolean hasData -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    23:27:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.common.GameCoordinator) -> <init>
    31:31:java.lang.String generateGameData() -> generateGameData
    36:36:java.lang.String getCurrentGameData() -> getCurrentGameData
    41:45:void onGameDataOutdated() -> onGameDataOutdated
    49:55:void onGameDataReceived(java.lang.String) -> onGameDataReceived
    58:58:boolean isHasData() -> a
    63:68:java.lang.String gameModelToJson() -> b
    72:97:void reconstructGameModelIfNoData(java.lang.String) -> a
com.potatoandtomato.games.screens.main.ImageStorage -> com.potatoandtomato.games.screens.main.a:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> b
    int totalIndex -> c
    java.util.ArrayList imagePairs -> d
    boolean randomize -> e
    int imageCountPerDownload -> f
    int currentIndex -> g
    int orderIndex -> h
    long downloadPeriod -> i
    java.util.ArrayList currentStoreImageIds -> j
    com.potatoandtomato.common.utils.SafeThread safeThread -> k
    30:44:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    47:79:void startMonitor() -> a
    83:102:void initiateDownloadsIfNoImagesAndIsCoordinator() -> b
    105:137:void convertImageIndexesToImageIds(java.util.ArrayList,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    140:172:void receivedDownloadRequest(java.util.ArrayList) -> a
    175:225:void downloadImages(com.potatoandtomato.games.models.ImageDetails,int) -> a
    229:233:void addImagePair(int,com.potatoandtomato.games.models.ImageDetails,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture,int) -> a
    236:255:void onResume() -> c
    258:273:void peek(com.potatoandtomato.games.absintf.ImageStorageListener) -> a
    276:293:void peek(int,com.potatoandtomato.games.absintf.ImageStorageListener) -> a
    296:310:void pop(com.potatoandtomato.games.absintf.ImageStorageListener) -> b
    313:319:void pop(java.lang.String,com.potatoandtomato.games.absintf.ImageStorageListener) -> a
    322:337:void popWait(java.lang.String,com.potatoandtomato.games.absintf.ImageStorageListener) -> b
    340:341:void resendRedownloadCurrentImageStorage(java.lang.String) -> a
    345:350:com.potatoandtomato.games.models.ImagePair getImagePairById(java.lang.String) -> b
    354:359:com.potatoandtomato.games.models.ImagePair getImagePairByIndex(int) -> b
    363:370:int getStartIndexWithHigherOrderIndex(int) -> c
    374:384:void disposeAllImages() -> d
    388:390:void dispose() -> dispose
    393:393:java.util.ArrayList getImagePairs() -> e
    397:398:void setRandomize(boolean) -> a
    401:402:void setDownloadPeriod(long) -> a
    405:409:void setCurrentIndex(int) -> a
    24:24:int access$002(com.potatoandtomato.games.screens.main.ImageStorage,int) -> a
    24:24:com.potatoandtomato.games.models.Services access$100(com.potatoandtomato.games.screens.main.ImageStorage) -> a
    24:24:long access$200(com.potatoandtomato.games.screens.main.ImageStorage) -> b
    24:24:com.potatoandtomato.common.utils.SafeThread access$300(com.potatoandtomato.games.screens.main.ImageStorage) -> c
    24:24:com.potatoandtomato.games.models.ImagePair access$400(com.potatoandtomato.games.screens.main.ImageStorage,java.lang.String) -> a
    24:24:int access$500(com.potatoandtomato.games.screens.main.ImageStorage) -> d
    24:24:int access$508(com.potatoandtomato.games.screens.main.ImageStorage) -> e
    24:24:com.potatoandtomato.common.GameCoordinator access$600(com.potatoandtomato.games.screens.main.ImageStorage) -> f
    24:24:boolean access$700(com.potatoandtomato.games.screens.main.ImageStorage) -> g
    24:24:int access$800(com.potatoandtomato.games.screens.main.ImageStorage) -> h
    24:24:int access$900(com.potatoandtomato.games.screens.main.ImageStorage,int) -> b
    24:24:void access$1000(com.potatoandtomato.games.screens.main.ImageStorage,int,com.potatoandtomato.games.models.ImageDetails,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture,int) -> a
    24:24:java.util.ArrayList access$1100(com.potatoandtomato.games.screens.main.ImageStorage) -> i
    24:24:com.potatoandtomato.games.models.ImagePair access$1200(com.potatoandtomato.games.screens.main.ImageStorage,int) -> c
    24:24:java.util.ArrayList access$1300(com.potatoandtomato.games.screens.main.ImageStorage) -> j
com.potatoandtomato.games.screens.main.ImageStorage$1 -> com.potatoandtomato.games.screens.main.a$1:
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> a
    47:47:void <init>(com.potatoandtomato.games.screens.main.ImageStorage) -> <init>
    51:77:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$1$1 -> com.potatoandtomato.games.screens.main.a$1$1:
    com.potatoandtomato.common.utils.Threadings$ThreadFragment val$threadFragment -> a
    com.potatoandtomato.games.screens.main.ImageStorage$1 this$1 -> b
    52:52:void <init>(com.potatoandtomato.games.screens.main.ImageStorage$1,com.potatoandtomato.common.utils.Threadings$ThreadFragment) -> <init>
    55:57:void onCallback(java.lang.Integer,com.potatoandtomato.common.enums.Status) -> a
    52:52:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.main.ImageStorage$10 -> com.potatoandtomato.games.screens.main.a$2:
    com.potatoandtomato.games.absintf.ImageStorageListener val$listener -> a
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> b
    296:296:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.absintf.ImageStorageListener) -> <init>
    299:308:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$11 -> com.potatoandtomato.games.screens.main.a$3:
    java.lang.String val$id -> a
    com.potatoandtomato.games.absintf.ImageStorageListener val$listener -> b
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> c
    322:322:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,java.lang.String,com.potatoandtomato.games.absintf.ImageStorageListener) -> <init>
    325:335:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$12 -> com.potatoandtomato.games.screens.main.a$4:
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> a
    374:374:void <init>(com.potatoandtomato.games.screens.main.ImageStorage) -> <init>
    377:382:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$2 -> com.potatoandtomato.games.screens.main.a$5:
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> a
    95:95:void <init>(com.potatoandtomato.games.screens.main.ImageStorage) -> <init>
    98:99:void onCallback(java.util.ArrayList,com.potatoandtomato.common.enums.Status) -> a
    95:95:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.main.ImageStorage$3 -> com.potatoandtomato.games.screens.main.a$6:
    java.util.ArrayList val$indexes -> a
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> b
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> c
    105:105:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,java.util.ArrayList,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    108:135:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$3$1 -> com.potatoandtomato.games.screens.main.a$6$1:
    java.util.ArrayList val$imageIds -> a
    int val$finalI -> b
    com.potatoandtomato.common.utils.Threadings$ThreadFragment val$threadFragment -> c
    com.potatoandtomato.games.screens.main.ImageStorage$3 this$1 -> d
    115:115:void <init>(com.potatoandtomato.games.screens.main.ImageStorage$3,java.lang.Class,java.util.ArrayList,int,com.potatoandtomato.common.utils.Threadings$ThreadFragment) -> <init>
    118:122:void onCallback(com.potatoandtomato.games.models.ImageDetails,com.potatoandtomato.common.enums.Status) -> a
    115:115:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.main.ImageStorage$4 -> com.potatoandtomato.games.screens.main.a$7:
    java.util.ArrayList val$imageIds -> a
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> b
    148:148:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,java.util.ArrayList) -> <init>
    151:170:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$4$1 -> com.potatoandtomato.games.screens.main.a$7$1:
    com.potatoandtomato.common.utils.Threadings$ThreadFragment val$threadFragment -> a
    com.potatoandtomato.games.screens.main.ImageStorage$4 this$1 -> b
    155:155:void <init>(com.potatoandtomato.games.screens.main.ImageStorage$4,java.lang.Class,com.potatoandtomato.common.utils.Threadings$ThreadFragment) -> <init>
    158:162:void onCallback(com.potatoandtomato.games.models.ImageDetails,com.potatoandtomato.common.enums.Status) -> a
    155:155:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.main.ImageStorage$5 -> com.potatoandtomato.games.screens.main.a$8:
    com.potatoandtomato.games.models.ImageDetails val$imageDetails -> a
    int val$currentOrderIndex -> b
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> c
    175:175:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.models.ImageDetails,int) -> <init>
    179:223:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$5$1 -> com.potatoandtomato.games.screens.main.ImageStorage$5$1:
    com.badlogic.gdx.graphics.Texture[] val$image1 -> a
    com.potatoandtomato.common.utils.Threadings$ThreadFragment val$threadFragment1 -> b
    com.potatoandtomato.games.screens.main.ImageStorage$5 this$1 -> c
    188:188:void <init>(com.potatoandtomato.games.screens.main.ImageStorage$5,com.badlogic.gdx.graphics.Texture[],com.potatoandtomato.common.utils.Threadings$ThreadFragment) -> <init>
    191:195:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.ImageStorage$5$2 -> com.potatoandtomato.games.screens.main.ImageStorage$5$2:
    com.badlogic.gdx.graphics.Texture[] val$image2 -> a
    com.potatoandtomato.common.utils.Threadings$ThreadFragment val$threadFragment2 -> b
    com.potatoandtomato.games.screens.main.ImageStorage$5 this$1 -> c
    198:198:void <init>(com.potatoandtomato.games.screens.main.ImageStorage$5,com.badlogic.gdx.graphics.Texture[],com.potatoandtomato.common.utils.Threadings$ThreadFragment) -> <init>
    201:205:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.ImageStorage$6 -> com.potatoandtomato.games.screens.main.ImageStorage$6:
    com.potatoandtomato.games.models.ImagePair val$imagePair -> a
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> b
    237:237:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.models.ImagePair) -> <init>
    240:243:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.ImageStorage$7 -> com.potatoandtomato.games.screens.main.ImageStorage$7:
    com.potatoandtomato.games.models.ImagePair val$imagePair -> a
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> b
    246:246:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.models.ImagePair) -> <init>
    249:252:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.ImageStorage$8 -> com.potatoandtomato.games.screens.main.a$9:
    com.potatoandtomato.games.absintf.ImageStorageListener val$listener -> a
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> b
    258:258:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.absintf.ImageStorageListener) -> <init>
    261:271:void run() -> run
com.potatoandtomato.games.screens.main.ImageStorage$9 -> com.potatoandtomato.games.screens.main.a$10:
    int val$index -> a
    com.potatoandtomato.games.absintf.ImageStorageListener val$listener -> b
    com.potatoandtomato.games.screens.main.ImageStorage this$0 -> c
    281:281:void <init>(com.potatoandtomato.games.screens.main.ImageStorage,int,com.potatoandtomato.games.absintf.ImageStorageListener) -> <init>
    284:291:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic -> com.potatoandtomato.games.screens.main.MainLogic:
    com.potatoandtomato.games.models.Services _services -> a
    com.potatoandtomato.games.screens.main.MainScreen _screen -> b
    com.potatoandtomato.games.screens.time_bar.TimeLogic _timeLogic -> c
    com.potatoandtomato.games.screens.hints.HintsLogic _hintsLogic -> d
    com.potatoandtomato.games.screens.review.ReviewLogic _reviewLogic -> e
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic _userCounterLogic -> f
    com.potatoandtomato.games.screens.stage_counter.StageCounterLogic _stageCounterLogic -> g
    com.potatoandtomato.games.screens.main.StageStateLogic _stageStateLogic -> h
    com.potatoandtomato.games.screens.scores.ScoresLogic _scoresLogic -> i
    com.potatoandtomato.games.models.GameModel _gameModel -> j
    com.potatoandtomato.games.models.ImagePair _currentImagePair -> k
    com.potatoandtomato.games.screens.main.ImageStorage _imageStorage -> l
    com.potatoandtomato.games.screens.main.StageImagesLogic _stageImagesLogic -> m
    com.potatoandtomato.games.screens.main.GameDataContract _gameDataContract -> n
    com.potatoandtomato.common.utils.SafeThread _safeThread -> o
    boolean disposed -> p
    boolean waitingContinue -> q
    63:91:void <init>(com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.Services,com.potatoandtomato.games.screens.time_bar.TimeLogic,com.potatoandtomato.games.screens.hints.HintsLogic,com.potatoandtomato.games.screens.review.ReviewLogic,com.potatoandtomato.games.screens.user_counters.UserCountersLogic,com.potatoandtomato.games.screens.stage_counter.StageCounterLogic,com.potatoandtomato.games.screens.scores.ScoresLogic,com.potatoandtomato.games.screens.main.ImageStorage,com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.screens.main.StageImagesLogic,com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.screens.main.GameDataContract) -> <init>
    94:98:void init() -> a
    101:105:void onContinue() -> b
    108:111:void waitingContinue() -> c
    115:138:void sendGoToNextStageIfIsDecisionMaker(int) -> a
    142:182:void goToNewStage(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String,int) -> a
    185:209:void onStartGameReceived(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
    212:228:void newStageReviewMode(java.lang.String) -> a
    231:243:void popImagePairIfCurrentIsNull(java.lang.String) -> b
    247:268:void imageTouched(float,float,int,int) -> a
    271:284:void touchReceived(java.lang.String,float,float,int,int,com.potatoandtomato.games.models.SimpleRectangle) -> a
    287:330:java.util.ArrayList getCorrectRectsByTouchPosition(float,float) -> a
    334:341:void checkGameEnded(int) -> b
    345:352:void gameOver() -> h
    355:381:void coinRequestPhase() -> i
    384:391:void circleAllAnswers() -> j
    394:403:void showEndGameTable() -> k
    406:422:void checkCanSwitchToReviewMode() -> l
    425:432:void switchToReviewMode() -> m
    436:715:void setListeners() -> n
    719:721:void dispose() -> dispose
    724:724:com.potatoandtomato.games.screens.main.MainScreen getMainScreen() -> d
    728:729:void setMainScreen(com.potatoandtomato.games.screens.main.MainScreen) -> a
    732:732:com.potatoandtomato.games.screens.time_bar.TimeLogic getTimeLogic() -> e
    736:736:com.potatoandtomato.games.models.GameModel getGameModel() -> f
    740:740:com.potatoandtomato.games.models.Services getServices() -> g
    39:39:com.potatoandtomato.games.screens.main.MainScreen access$000(com.potatoandtomato.games.screens.main.MainLogic) -> a
    39:39:com.potatoandtomato.games.models.GameModel access$100(com.potatoandtomato.games.screens.main.MainLogic) -> b
    39:39:com.potatoandtomato.games.models.Services access$200(com.potatoandtomato.games.screens.main.MainLogic) -> c
    39:39:com.potatoandtomato.common.utils.SafeThread access$300(com.potatoandtomato.games.screens.main.MainLogic) -> d
    39:39:boolean access$400(com.potatoandtomato.games.screens.main.MainLogic) -> e
    39:39:com.potatoandtomato.games.models.ImagePair access$502(com.potatoandtomato.games.screens.main.MainLogic,com.potatoandtomato.games.models.ImagePair) -> a
    39:39:com.potatoandtomato.games.models.ImagePair access$500(com.potatoandtomato.games.screens.main.MainLogic) -> f
    39:39:com.potatoandtomato.games.screens.main.StageImagesLogic access$600(com.potatoandtomato.games.screens.main.MainLogic) -> g
    39:39:void access$700(com.potatoandtomato.games.screens.main.MainLogic) -> h
    39:39:void access$800(com.potatoandtomato.games.screens.main.MainLogic) -> i
    39:39:void access$900(com.potatoandtomato.games.screens.main.MainLogic) -> j
    39:39:void access$1000(com.potatoandtomato.games.screens.main.MainLogic) -> k
    39:39:void access$1100(com.potatoandtomato.games.screens.main.MainLogic) -> l
    39:39:com.potatoandtomato.games.screens.main.ImageStorage access$1200(com.potatoandtomato.games.screens.main.MainLogic) -> m
    39:39:com.potatoandtomato.common.utils.SafeThread access$302(com.potatoandtomato.games.screens.main.MainLogic,com.potatoandtomato.common.utils.SafeThread) -> a
    39:39:boolean access$1300(com.potatoandtomato.games.screens.main.MainLogic) -> n
com.potatoandtomato.games.screens.main.MainLogic$1 -> com.potatoandtomato.games.screens.main.MainLogic$1:
    com.potatoandtomato.games.screens.main.StageImagesLogic val$_stageImagesLogic -> a
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> b
    82:82:void <init>(com.potatoandtomato.games.screens.main.MainLogic,com.potatoandtomato.games.screens.main.StageImagesLogic) -> <init>
    85:87:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$10 -> com.potatoandtomato.games.screens.main.MainLogic$10:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    512:512:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    515:516:void backPressed() -> backPressed
com.potatoandtomato.games.screens.main.MainLogic$11 -> com.potatoandtomato.games.screens.main.MainLogic$2:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    519:519:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    522:536:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$11$1 -> com.potatoandtomato.games.screens.main.MainLogic$2$1:
    com.potatoandtomato.games.screens.main.MainLogic$11 this$1 -> a
    522:522:void <init>(com.potatoandtomato.games.screens.main.MainLogic$11) -> <init>
    526:526:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.main.MainLogic$11$2 -> com.potatoandtomato.games.screens.main.MainLogic$2$2:
    com.potatoandtomato.games.screens.main.MainLogic$11 this$1 -> a
    529:529:void <init>(com.potatoandtomato.games.screens.main.MainLogic$11) -> <init>
    532:533:boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
com.potatoandtomato.games.screens.main.MainLogic$12 -> com.potatoandtomato.games.screens.main.MainLogic$3:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    539:539:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    543:547:void onHintClicked(com.badlogic.gdx.math.Rectangle,int) -> a
com.potatoandtomato.games.screens.main.MainLogic$13 -> com.potatoandtomato.games.screens.main.MainLogic$4:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    551:551:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    554:557:void onTouch(float,float) -> a
    561:562:void requestCircleAll() -> a
    566:567:void cancelCircleAll() -> b
com.potatoandtomato.games.screens.main.MainLogic$14 -> com.potatoandtomato.games.screens.main.MainLogic$5:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    571:571:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    575:610:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$14$1 -> com.potatoandtomato.games.screens.main.MainLogic$5$1:
    com.potatoandtomato.games.screens.main.MainLogic$14 this$1 -> a
    581:581:void <init>(com.potatoandtomato.games.screens.main.MainLogic$14) -> <init>
    584:608:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$14$1$1 -> com.potatoandtomato.games.screens.main.MainLogic$14$1$1:
    int[] val$waitingImageCount -> a
    com.potatoandtomato.games.screens.main.MainLogic$14$1 this$2 -> b
    586:586:void <init>(com.potatoandtomato.games.screens.main.MainLogic$14$1,int[]) -> <init>
    589:591:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.MainLogic$14$1$2 -> com.potatoandtomato.games.screens.main.MainLogic$14$1$2:
    int[] val$waitingImageCount -> a
    com.potatoandtomato.games.screens.main.MainLogic$14$1 this$2 -> b
    593:593:void <init>(com.potatoandtomato.games.screens.main.MainLogic$14$1,int[]) -> <init>
    596:598:void onLoaded(com.badlogic.gdx.graphics.Texture) -> onLoaded
com.potatoandtomato.games.screens.main.MainLogic$15 -> com.potatoandtomato.games.screens.main.MainLogic$15:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    613:613:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    616:620:void onChanged(java.lang.String) -> onChanged
com.potatoandtomato.games.screens.main.MainLogic$16 -> com.potatoandtomato.games.screens.main.MainLogic$16:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    623:623:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    626:631:void userAbandoned(java.lang.String) -> userAbandoned
    635:636:void userConnected(java.lang.String) -> userConnected
    640:645:void userDisconnected(java.lang.String) -> userDisconnected
com.potatoandtomato.games.screens.main.MainLogic$17 -> com.potatoandtomato.games.screens.main.MainLogic$6:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    648:648:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    652:654:void onTouched(com.potatoandtomato.games.models.TouchedPoint,java.lang.String) -> a
    658:663:void onLose(com.potatoandtomato.games.models.GameModel) -> a
    667:672:void onWon(com.potatoandtomato.games.models.WonStageModel) -> a
    676:677:void onDownloadImageRequest(java.util.ArrayList) -> a
    681:682:void onGoToNextStage(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String,int) -> a
    686:687:void onStartPlaying(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
com.potatoandtomato.games.screens.main.MainLogic$18 -> com.potatoandtomato.games.screens.main.MainLogic$7:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    691:691:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    695:695:void onDeleted() -> a
    699:711:void onGoToIndex(int) -> a
com.potatoandtomato.games.screens.main.MainLogic$18$1 -> com.potatoandtomato.games.screens.main.MainLogic$7$1:
    com.potatoandtomato.games.screens.main.MainLogic$18 this$1 -> a
    702:702:void <init>(com.potatoandtomato.games.screens.main.MainLogic$18) -> <init>
    705:706:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$2 -> com.potatoandtomato.games.screens.main.MainLogic$8:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    120:120:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    124:135:void onPeeked(com.potatoandtomato.games.models.ImagePair) -> b
com.potatoandtomato.games.screens.main.MainLogic$3 -> com.potatoandtomato.games.screens.main.MainLogic$9:
    java.lang.String val$id -> a
    int val$stageNumber -> b
    com.potatoandtomato.games.enums.StageType val$stageType -> c
    com.potatoandtomato.games.enums.BonusType val$bonusType -> d
    java.lang.String val$extra -> e
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> f
    169:169:void <init>(com.potatoandtomato.games.screens.main.MainLogic,java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> <init>
    172:180:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$4 -> com.potatoandtomato.games.screens.main.MainLogic$11:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    212:212:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    215:226:void onPopped(com.potatoandtomato.games.models.ImagePair) -> a
com.potatoandtomato.games.screens.main.MainLogic$5 -> com.potatoandtomato.games.screens.main.MainLogic$12:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    232:232:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    235:240:void onPopped(com.potatoandtomato.games.models.ImagePair) -> a
com.potatoandtomato.games.screens.main.MainLogic$6 -> com.potatoandtomato.games.screens.main.MainLogic$13:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    355:355:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    358:379:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$6$1 -> com.potatoandtomato.games.screens.main.MainLogic$6$1:
    com.potatoandtomato.games.screens.main.MainLogic$6 this$1 -> a
    361:361:void <init>(com.potatoandtomato.games.screens.main.MainLogic$6) -> <init>
    364:366:void onDeductCoinsDone() -> onDeductCoinsDone
    370:375:void onDismiss(java.lang.String) -> onDismiss
com.potatoandtomato.games.screens.main.MainLogic$7 -> com.potatoandtomato.games.screens.main.MainLogic$14:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    396:396:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    399:401:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.main.MainLogic$8 -> com.potatoandtomato.games.screens.main.MainLogic$17:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    411:411:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    414:417:void onCallback(java.lang.Boolean,com.potatoandtomato.common.enums.Status) -> a
    411:411:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.main.MainLogic$9 -> com.potatoandtomato.games.screens.main.MainLogic$18:
    com.potatoandtomato.games.screens.main.MainLogic this$0 -> a
    436:436:void <init>(com.potatoandtomato.games.screens.main.MainLogic) -> <init>
    439:443:void onHandledAreasChanged() -> b
    448:458:void onTimeFinished() -> a
    462:501:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
    505:508:void onCorrectClicked(com.potatoandtomato.games.models.SimpleRectangle,int) -> a
com.potatoandtomato.games.screens.main.MainLogic$9$1 -> com.potatoandtomato.games.screens.main.MainLogic$18$1:
    com.potatoandtomato.games.screens.main.MainLogic$9 this$1 -> a
    449:449:void <init>(com.potatoandtomato.games.screens.main.MainLogic$9) -> <init>
    452:455:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$9$2 -> com.potatoandtomato.games.screens.main.MainLogic$18$2:
    com.potatoandtomato.games.screens.main.MainLogic$9 this$1 -> a
    467:467:void <init>(com.potatoandtomato.games.screens.main.MainLogic$9) -> <init>
    470:471:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$9$3 -> com.potatoandtomato.games.screens.main.MainLogic$18$3:
    com.potatoandtomato.games.screens.main.MainLogic$9 this$1 -> a
    476:476:void <init>(com.potatoandtomato.games.screens.main.MainLogic$9) -> <init>
    479:481:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$9$4 -> com.potatoandtomato.games.screens.main.MainLogic$18$4:
    com.potatoandtomato.games.screens.main.MainLogic$9 this$1 -> a
    485:485:void <init>(com.potatoandtomato.games.screens.main.MainLogic$9) -> <init>
    488:489:void run() -> run
com.potatoandtomato.games.screens.main.MainLogic$9$5 -> com.potatoandtomato.games.screens.main.MainLogic$18$5:
    com.potatoandtomato.games.screens.main.MainLogic$9 this$1 -> a
    493:493:void <init>(com.potatoandtomato.games.screens.main.MainLogic$9) -> <init>
    496:497:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen -> com.potatoandtomato.games.screens.main.MainScreen:
    com.potatoandtomato.games.models.Services _services -> a
    com.potatoandtomato.games.assets.MyAssets _assets -> b
    com.badlogic.gdx.scenes.scene2d.Stage _stage -> c
    com.badlogic.gdx.scenes.scene2d.ui.Table _root -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table _imageOneTable -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table _imageTwoTable -> f
    com.badlogic.gdx.scenes.scene2d.ui.Table _imageOneInnerTable -> g
    com.badlogic.gdx.scenes.scene2d.ui.Table _imageTwoInnerTable -> h
    com.badlogic.gdx.scenes.scene2d.ui.Table _bottomBarTable -> i
    com.badlogic.gdx.scenes.scene2d.ui.Table _blockTable -> j
    com.badlogic.gdx.scenes.scene2d.ui.Table _endGameTable -> k
    com.badlogic.gdx.math.Vector2 _imageSize -> l
    com.potatoandtomato.games.enums.GameState _previousGameState -> m
    com.potatoandtomato.common.GameCoordinator _coordinator -> n
    63:69:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    72:99:void init() -> a
    102:103:void readyToStart() -> b
    108:221:void populate(com.potatoandtomato.games.screens.time_bar.TimeActor,com.potatoandtomato.games.screens.hints.HintsActor,com.potatoandtomato.games.screens.user_counters.UserCountersActor,com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.potatoandtomato.games.screens.scores.ScoresActor,com.potatoandtomato.games.screens.main.StageStateActor) -> a
    224:254:void showMessages(java.lang.String) -> a
    257:273:void setImages(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture) -> a
    276:290:void onResumeRefreshImages(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture) -> b
    294:333:void cross(float,float,java.lang.String) -> a
    336:370:void circle(com.potatoandtomato.games.models.SimpleRectangle,java.lang.String,int) -> a
    373:395:void unCircleAll() -> c
    400:407:void switchToReviewMode(com.potatoandtomato.games.screens.review.ReviewActor) -> a
    410:416:void showEndGameTable() -> d
    419:425:void hideEndGameTable() -> e
    430:430:void show() -> show
    434:440:void render(float) -> render
    444:445:void resize(int,int) -> resize
    450:450:void pause() -> pause
    455:455:void resume() -> resume
    460:460:void hide() -> hide
    465:465:void dispose() -> dispose
    468:468:com.badlogic.gdx.math.Vector2 getImageSize() -> f
    472:472:com.badlogic.gdx.scenes.scene2d.ui.Table getImageTwoTable() -> g
    476:476:com.badlogic.gdx.scenes.scene2d.ui.Table getImageOneTable() -> h
    480:480:com.badlogic.gdx.scenes.scene2d.ui.Table getImageOneInnerTable() -> i
    484:484:com.badlogic.gdx.scenes.scene2d.ui.Table getImageTwoInnerTable() -> j
    488:488:com.badlogic.gdx.scenes.scene2d.ui.Table getBlockTable() -> k
    492:492:com.badlogic.gdx.scenes.scene2d.ui.Table getBottomBarTable() -> l
    496:496:com.badlogic.gdx.scenes.scene2d.ui.Table getEndGameTable() -> m
    49:49:com.badlogic.gdx.scenes.scene2d.Stage access$002(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.Stage) -> a
    49:49:com.badlogic.gdx.scenes.scene2d.Stage access$000(com.potatoandtomato.games.screens.main.MainScreen) -> a
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$102(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$100(com.potatoandtomato.games.screens.main.MainScreen) -> b
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$202(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> b
    49:49:com.potatoandtomato.games.assets.MyAssets access$300(com.potatoandtomato.games.screens.main.MainScreen) -> c
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$200(com.potatoandtomato.games.screens.main.MainScreen) -> d
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$402(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> c
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$400(com.potatoandtomato.games.screens.main.MainScreen) -> e
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$502(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> d
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$500(com.potatoandtomato.games.screens.main.MainScreen) -> f
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$602(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> e
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$600(com.potatoandtomato.games.screens.main.MainScreen) -> g
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$702(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> f
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$700(com.potatoandtomato.games.screens.main.MainScreen) -> h
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$802(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> g
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$800(com.potatoandtomato.games.screens.main.MainScreen) -> i
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$902(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.scenes.scene2d.ui.Table) -> h
    49:49:com.badlogic.gdx.scenes.scene2d.ui.Table access$900(com.potatoandtomato.games.screens.main.MainScreen) -> j
    49:49:com.badlogic.gdx.math.Vector2 access$1002(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.math.Vector2) -> a
    49:49:com.badlogic.gdx.math.Vector2 access$1000(com.potatoandtomato.games.screens.main.MainScreen) -> k
    49:49:com.potatoandtomato.games.models.Services access$1100(com.potatoandtomato.games.screens.main.MainScreen) -> l
com.potatoandtomato.games.screens.main.MainScreen$1 -> com.potatoandtomato.games.screens.main.MainScreen$1:
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> a
    72:72:void <init>(com.potatoandtomato.games.screens.main.MainScreen) -> <init>
    75:96:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$10 -> com.potatoandtomato.games.screens.main.MainScreen$2:
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> a
    410:410:void <init>(com.potatoandtomato.games.screens.main.MainScreen) -> <init>
    413:414:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$11 -> com.potatoandtomato.games.screens.main.MainScreen$3:
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> a
    419:419:void <init>(com.potatoandtomato.games.screens.main.MainScreen) -> <init>
    422:423:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$2 -> com.potatoandtomato.games.screens.main.MainScreen$4:
    com.potatoandtomato.games.screens.hints.HintsActor val$hintsActor -> a
    com.potatoandtomato.games.screens.time_bar.TimeActor val$timeActor -> b
    com.potatoandtomato.games.screens.user_counters.UserCountersActor val$userCountersActor -> c
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor val$stageCounterActor -> d
    com.potatoandtomato.games.screens.scores.ScoresActor val$scoresActor -> e
    com.potatoandtomato.games.screens.main.StageStateActor val$stageStateActor -> f
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> g
    108:108:void <init>(com.potatoandtomato.games.screens.main.MainScreen,com.potatoandtomato.games.screens.hints.HintsActor,com.potatoandtomato.games.screens.time_bar.TimeActor,com.potatoandtomato.games.screens.user_counters.UserCountersActor,com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.potatoandtomato.games.screens.scores.ScoresActor,com.potatoandtomato.games.screens.main.StageStateActor) -> <init>
    114:218:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$3 -> com.potatoandtomato.games.screens.main.MainScreen$5:
    java.lang.String val$msg -> a
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> b
    224:224:void <init>(com.potatoandtomato.games.screens.main.MainScreen,java.lang.String) -> <init>
    227:251:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$4 -> com.potatoandtomato.games.screens.main.MainScreen$6:
    com.badlogic.gdx.graphics.Texture val$texture1 -> a
    com.badlogic.gdx.graphics.Texture val$texture2 -> b
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> c
    257:257:void <init>(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture) -> <init>
    260:271:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$5 -> com.potatoandtomato.games.screens.main.MainScreen$7:
    com.badlogic.gdx.graphics.Texture val$texture1 -> a
    com.badlogic.gdx.graphics.Texture val$texture2 -> b
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> c
    276:276:void <init>(com.potatoandtomato.games.screens.main.MainScreen,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture) -> <init>
    279:288:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$6 -> com.potatoandtomato.games.screens.main.MainScreen$8:
    java.lang.String val$userId -> a
    float val$x -> b
    float val$y -> c
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> d
    294:294:void <init>(com.potatoandtomato.games.screens.main.MainScreen,java.lang.String,float,float) -> <init>
    297:331:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$6$1 -> com.potatoandtomato.games.screens.main.MainScreen$8$1:
    com.potatoandtomato.games.controls.Cross val$cross -> a
    com.potatoandtomato.games.screens.main.MainScreen$6 this$1 -> b
    303:303:void <init>(com.potatoandtomato.games.screens.main.MainScreen$6,com.potatoandtomato.games.controls.Cross) -> <init>
    306:307:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$6$2 -> com.potatoandtomato.games.screens.main.MainScreen$8$2:
    com.potatoandtomato.games.controls.Cross val$cross2 -> a
    com.potatoandtomato.games.screens.main.MainScreen$6 this$1 -> b
    318:318:void <init>(com.potatoandtomato.games.screens.main.MainScreen$6,com.potatoandtomato.games.controls.Cross) -> <init>
    321:322:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$7 -> com.potatoandtomato.games.screens.main.MainScreen$9:
    com.potatoandtomato.games.models.SimpleRectangle val$correctRect -> a
    java.lang.String val$userId -> b
    int val$playSoundNumber -> c
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> d
    336:336:void <init>(com.potatoandtomato.games.screens.main.MainScreen,com.potatoandtomato.games.models.SimpleRectangle,java.lang.String,int) -> <init>
    339:368:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$8 -> com.potatoandtomato.games.screens.main.MainScreen$10:
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> a
    373:373:void <init>(com.potatoandtomato.games.screens.main.MainScreen) -> <init>
    376:393:void run() -> run
com.potatoandtomato.games.screens.main.MainScreen$9 -> com.potatoandtomato.games.screens.main.MainScreen$11:
    com.potatoandtomato.games.screens.review.ReviewActor val$reviewActor -> a
    com.potatoandtomato.games.screens.main.MainScreen this$0 -> b
    400:400:void <init>(com.potatoandtomato.games.screens.main.MainScreen,com.potatoandtomato.games.screens.review.ReviewActor) -> <init>
    403:405:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor -> com.potatoandtomato.games.screens.main.b:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.games.assets.MyAssets assets -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    com.badlogic.gdx.scenes.scene2d.ui.Table imageOneTable -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table imageTwoTable -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table imageOneInnerTable -> f
    com.badlogic.gdx.scenes.scene2d.ui.Table imageTwoInnerTable -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image blackBg -> h
    com.badlogic.gdx.scenes.scene2d.ui.Image lightBulbOff -> i
    com.badlogic.gdx.scenes.scene2d.ui.Image lightBulbBreak -> j
    com.badlogic.gdx.scenes.scene2d.ui.Image lightBulbOn -> k
    com.potatoandtomato.common.utils.SafeThread safeThread -> l
    56:64:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table) -> <init>
    67:86:void reset() -> a
    89:90:void stop() -> b
    93:132:void maneuver(com.potatoandtomato.games.enums.BonusType,java.lang.String,com.potatoandtomato.games.models.GameModel) -> a
    136:182:void egg() -> c
    185:250:void putEggs(java.util.ArrayList,float,float,int) -> a
    253:275:void eggToYolk(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    278:330:void covered() -> d
    333:342:void wrinkle() -> e
    345:353:void inverted() -> f
    356:429:void lighting(java.lang.String,com.potatoandtomato.games.models.GameModel) -> a
    432:442:void lightBulbOnAnimation() -> k
    445:453:void lightBulbOffAnimation() -> l
    456:468:void lightBulbBreakAnimation() -> m
    471:496:void looping() -> g
    499:505:void startMemory() -> h
    508:532:void endMemory() -> i
    535:552:void torchLight() -> j
    555:1061:void distractions(java.lang.String) -> a
    1065:1076:void moveCat(float) -> a
    1079:1090:void moveToRandomPosition(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Runnable) -> a
    1093:1114:void showDisallowClick(float,float,boolean) -> a
    1117:1138:void resetAllTable() -> n
    44:44:com.potatoandtomato.games.models.Services access$000(com.potatoandtomato.games.screens.main.StageImagesActor) -> a
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Table access$100(com.potatoandtomato.games.screens.main.StageImagesActor) -> b
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Table access$200(com.potatoandtomato.games.screens.main.StageImagesActor) -> c
    44:44:com.potatoandtomato.common.utils.SafeThread access$300(com.potatoandtomato.games.screens.main.StageImagesActor) -> d
    44:44:void access$400(com.potatoandtomato.games.screens.main.StageImagesActor) -> e
    44:44:void access$500(com.potatoandtomato.games.screens.main.StageImagesActor,java.util.ArrayList,float,float,int) -> a
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Table access$600(com.potatoandtomato.games.screens.main.StageImagesActor) -> f
    44:44:com.potatoandtomato.games.assets.MyAssets access$700(com.potatoandtomato.games.screens.main.StageImagesActor) -> g
    44:44:void access$800(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$902(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$900(com.potatoandtomato.games.screens.main.StageImagesActor) -> h
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1002(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> b
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1000(com.potatoandtomato.games.screens.main.StageImagesActor) -> i
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1102(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> c
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1100(com.potatoandtomato.games.screens.main.StageImagesActor) -> j
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1202(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> d
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Image access$1200(com.potatoandtomato.games.screens.main.StageImagesActor) -> k
    44:44:com.potatoandtomato.common.utils.SafeThread access$302(com.potatoandtomato.games.screens.main.StageImagesActor,com.potatoandtomato.common.utils.SafeThread) -> a
    44:44:void access$1300(com.potatoandtomato.games.screens.main.StageImagesActor) -> l
    44:44:void access$1400(com.potatoandtomato.games.screens.main.StageImagesActor) -> m
    44:44:void access$1500(com.potatoandtomato.games.screens.main.StageImagesActor) -> n
    44:44:void access$1600(com.potatoandtomato.games.screens.main.StageImagesActor,float) -> a
    44:44:void access$1700(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Runnable) -> a
    44:44:com.badlogic.gdx.scenes.scene2d.ui.Table access$1800(com.potatoandtomato.games.screens.main.StageImagesActor) -> o
com.potatoandtomato.games.screens.main.StageImagesActor$1 -> com.potatoandtomato.games.screens.main.b$1:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    67:67:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    70:84:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$10 -> com.potatoandtomato.games.screens.main.b$2:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    432:432:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    435:440:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$11 -> com.potatoandtomato.games.screens.main.b$3:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    445:445:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    448:451:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$12 -> com.potatoandtomato.games.screens.main.b$4:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    456:456:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    459:466:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$13 -> com.potatoandtomato.games.screens.main.b$5:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    471:471:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    474:493:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$14 -> com.potatoandtomato.games.screens.main.b$6:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    499:499:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    502:503:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$15 -> com.potatoandtomato.games.screens.main.b$7:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    508:508:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    511:530:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$16 -> com.potatoandtomato.games.screens.main.b$8:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    535:535:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    538:550:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$17 -> com.potatoandtomato.games.screens.main.b$9:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    557:557:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    560:585:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$17$1 -> com.potatoandtomato.games.screens.main.b$9$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$17 this$1 -> a
    569:569:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$17) -> <init>
    572:573:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$17$2 -> com.potatoandtomato.games.screens.main.b$9$2:
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$17 this$1 -> b
    575:575:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$17,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    579:580:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18 -> com.potatoandtomato.games.screens.main.b$10:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    592:592:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    595:629:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18$1 -> com.potatoandtomato.games.screens.main.b$10$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$18 this$1 -> a
    602:602:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$18) -> <init>
    605:606:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18$2 -> com.potatoandtomato.games.screens.main.b$10$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$18 this$1 -> a
    607:607:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$18) -> <init>
    610:611:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18$3 -> com.potatoandtomato.games.screens.main.b$10$3:
    com.potatoandtomato.games.screens.main.StageImagesActor$18 this$1 -> a
    612:612:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$18) -> <init>
    615:616:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18$4 -> com.potatoandtomato.games.screens.main.b$10$4:
    com.potatoandtomato.games.screens.main.StageImagesActor$18 this$1 -> a
    617:617:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$18) -> <init>
    620:621:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$18$5 -> com.potatoandtomato.games.screens.main.b$10$5:
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$18 this$1 -> b
    622:622:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$18,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    625:627:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19 -> com.potatoandtomato.games.screens.main.b$11:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    636:636:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    639:699:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19$1 -> com.potatoandtomato.games.screens.main.b$11$1:
    boolean[] val$stop -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$19 this$1 -> b
    642:642:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$19,boolean[]) -> <init>
    646:651:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19$2 -> com.potatoandtomato.games.screens.main.b$11$2:
    boolean[] val$stop -> a
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> b
    com.potatoandtomato.games.screens.main.StageImagesActor$19 this$1 -> c
    658:658:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$19,boolean[],com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    661:697:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1 -> com.potatoandtomato.games.screens.main.b$11$2$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$19$2 this$2 -> a
    667:667:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$19$2) -> <init>
    670:695:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1$1 -> com.potatoandtomato.games.screens.main.b$11$2$1$1:
    int val$finalI -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1 this$3 -> b
    673:673:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1,int) -> <init>
    676:686:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1$2 -> com.potatoandtomato.games.screens.main.b$11$2$1$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1 this$3 -> a
    689:689:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$19$2$1) -> <init>
    692:693:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$2 -> com.potatoandtomato.games.screens.main.b$12:
    com.potatoandtomato.games.enums.BonusType val$bonusType -> a
    java.lang.String val$extra -> b
    com.potatoandtomato.games.models.GameModel val$gameModel -> c
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> d
    93:93:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,com.potatoandtomato.games.enums.BonusType,java.lang.String,com.potatoandtomato.games.models.GameModel) -> <init>
    96:130:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$20 -> com.potatoandtomato.games.screens.main.b$13:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    706:706:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    709:746:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$20$1 -> com.potatoandtomato.games.screens.main.b$13$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$vampireImage -> a
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> b
    com.potatoandtomato.games.screens.main.StageImagesActor$20 this$1 -> c
    715:715:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$20,com.badlogic.gdx.scenes.scene2d.ui.Image,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    718:744:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$20$1$1 -> com.potatoandtomato.games.screens.main.b$13$1$1:
    boolean[] val$finish -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$20$1 this$2 -> b
    720:720:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$20$1,boolean[]) -> <init>
    723:730:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$20$1$1$1 -> com.potatoandtomato.games.screens.main.b$13$1$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$20$1$1 this$3 -> a
    723:723:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$20$1$1) -> <init>
    726:727:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$20$1$2 -> com.potatoandtomato.games.screens.main.b$13$1$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$20$1 this$2 -> a
    736:736:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$20$1) -> <init>
    739:740:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21 -> com.potatoandtomato.games.screens.main.b$14:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    753:753:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    756:803:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$1 -> com.potatoandtomato.games.screens.main.b$14$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    764:764:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    767:769:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$2 -> com.potatoandtomato.games.screens.main.b$14$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    770:770:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    773:774:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$3 -> com.potatoandtomato.games.screens.main.b$14$3:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    775:775:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    778:780:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$4 -> com.potatoandtomato.games.screens.main.b$14$4:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    781:781:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    784:785:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$5 -> com.potatoandtomato.games.screens.main.b$14$5:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    786:786:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    789:790:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$6 -> com.potatoandtomato.games.screens.main.b$14$6:
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> a
    791:791:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21) -> <init>
    794:795:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$21$7 -> com.potatoandtomato.games.screens.main.b$14$7:
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$21 this$1 -> b
    796:796:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$21,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    799:801:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$22 -> com.potatoandtomato.games.screens.main.b$15:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    810:810:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    813:831:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$22$1 -> com.potatoandtomato.games.screens.main.b$15$1:
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$22 this$1 -> b
    822:822:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$22,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    825:826:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$23 -> com.potatoandtomato.games.screens.main.b$16:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    838:838:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    841:859:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$23$1 -> com.potatoandtomato.games.screens.main.b$16$1:
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$23 this$1 -> b
    851:851:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$23,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    854:855:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24 -> com.potatoandtomato.games.screens.main.b$17:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    867:867:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    870:929:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$1 -> com.potatoandtomato.games.screens.main.b$17$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$24 this$1 -> a
    889:889:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24) -> <init>
    892:893:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$2 -> com.potatoandtomato.games.screens.main.b$17$2:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$manGiveFlowerImage -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$24 this$1 -> b
    894:894:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    897:899:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$3 -> com.potatoandtomato.games.screens.main.b$17$3:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$pregnantImage -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$manGiveFlowerImage -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$manRunningImage -> c
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> d
    com.potatoandtomato.games.screens.main.StageImagesActor$24 this$1 -> e
    900:900:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24,com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Image,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    903:927:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1 -> com.potatoandtomato.games.screens.main.b$17$3$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$24$3 this$2 -> a
    904:904:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24$3) -> <init>
    907:925:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1$1 -> com.potatoandtomato.games.screens.main.b$17$3$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1 this$3 -> a
    908:908:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1) -> <init>
    911:912:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1$2 -> com.potatoandtomato.games.screens.main.b$17$3$1$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1 this$3 -> a
    913:913:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1) -> <init>
    916:923:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1$2$1 -> com.potatoandtomato.games.screens.main.b$17$3$1$2$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1$2 this$4 -> a
    916:916:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$24$3$1$2) -> <init>
    919:921:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$25 -> com.potatoandtomato.games.screens.main.b$18:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    936:936:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    939:969:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$25$1 -> com.potatoandtomato.games.screens.main.b$18$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$speechImage -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$crowdImage -> b
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> c
    com.potatoandtomato.games.screens.main.StageImagesActor$25 this$1 -> d
    951:951:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$25,com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Image,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    954:967:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$25$1$1 -> com.potatoandtomato.games.screens.main.b$18$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$25$1 this$2 -> a
    955:955:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$25$1) -> <init>
    958:965:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$25$1$1$1 -> com.potatoandtomato.games.screens.main.b$18$1$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$25$1$1 this$3 -> a
    959:959:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$25$1$1) -> <init>
    962:963:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26 -> com.potatoandtomato.games.screens.main.b$19:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    975:975:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    978:1027:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1 -> com.potatoandtomato.games.screens.main.b$19$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$alienImage -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$ufoImage -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$rocketImage -> c
    com.potatoandtomato.games.helpers.NotifyRunnable val$_this -> d
    com.potatoandtomato.games.screens.main.StageImagesActor$26 this$1 -> e
    993:993:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26,com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Image,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    996:1025:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1 -> com.potatoandtomato.games.screens.main.b$19$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$26$1 this$2 -> a
    996:996:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26$1) -> <init>
    999:1023:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1 -> com.potatoandtomato.games.screens.main.b$19$1$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1 this$3 -> a
    1000:1000:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1) -> <init>
    1003:1021:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1$1 -> com.potatoandtomato.games.screens.main.b$19$1$1$1$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1 this$4 -> a
    1004:1004:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1) -> <init>
    1007:1009:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1$2 -> com.potatoandtomato.games.screens.main.b$19$1$1$1$2:
    com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1 this$4 -> a
    1010:1010:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1) -> <init>
    1013:1014:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1$3 -> com.potatoandtomato.games.screens.main.b$19$1$1$1$3:
    com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1 this$4 -> a
    1015:1015:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$26$1$1$1) -> <init>
    1018:1019:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$27 -> com.potatoandtomato.games.screens.main.b$20:
    java.util.ArrayList val$sequence -> a
    java.util.ArrayList val$runnables -> b
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> c
    1037:1037:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,java.util.ArrayList,java.util.ArrayList) -> <init>
    1040:1059:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$27$1 -> com.potatoandtomato.games.screens.main.b$20$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$27 this$1 -> a
    1040:1040:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$27) -> <init>
    1043:1057:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$27$1$1 -> com.potatoandtomato.games.screens.main.b$20$1$1:
    com.potatoandtomato.games.helpers.NotifyRunnable val$runnable -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$27$1 this$2 -> b
    1045:1045:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$27$1,com.potatoandtomato.games.helpers.NotifyRunnable) -> <init>
    1048:1049:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$28 -> com.potatoandtomato.games.screens.main.b$21:
    float val$yOffset -> a
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> b
    1065:1065:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,float) -> <init>
    1068:1073:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$29 -> com.potatoandtomato.games.screens.main.b$22:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> a
    java.lang.Runnable val$onFinish -> b
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> c
    1079:1079:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Runnable) -> <init>
    1082:1088:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$29$1 -> com.potatoandtomato.games.screens.main.b$22$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$29 this$1 -> a
    1082:1082:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$29) -> <init>
    1085:1086:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$3 -> com.potatoandtomato.games.screens.main.b$23:
    java.util.ArrayList val$randoms -> a
    float val$eachColWidth -> b
    float val$eachRowHeight -> c
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> d
    151:151:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,java.util.ArrayList,float,float) -> <init>
    154:178:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$3$1 -> com.potatoandtomato.games.screens.main.b$23$1:
    int val$finalI -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$3 this$1 -> b
    159:159:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$3,int) -> <init>
    162:173:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$30 -> com.potatoandtomato.games.screens.main.b$24:
    boolean val$isTableTwo -> a
    float val$x -> b
    float val$y -> c
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> d
    1093:1093:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,boolean,float,float) -> <init>
    1096:1110:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$30$1 -> com.potatoandtomato.games.screens.main.b$24$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$stopImage -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$30 this$1 -> b
    1102:1102:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$30,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    1105:1106:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$31 -> com.potatoandtomato.games.screens.main.b$25:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    1117:1117:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    1120:1135:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$32 -> com.potatoandtomato.games.screens.main.b$26:
    int[] $SwitchMap$com$potatoandtomato$games$enums$BonusType -> a
    100:100:void <clinit>() -> <clinit>
com.potatoandtomato.games.screens.main.StageImagesActor$4 -> com.potatoandtomato.games.screens.main.b$27:
    java.util.ArrayList val$randoms -> a
    int val$totalCount -> b
    float val$eachColWidth -> c
    float val$eachRowHeight -> d
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> e
    185:185:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,java.util.ArrayList,int,float,float) -> <init>
    188:247:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$4$1 -> com.potatoandtomato.games.screens.main.b$27$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$eggImage -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$4 this$1 -> b
    213:213:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$4,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    217:219:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.potatoandtomato.games.screens.main.StageImagesActor$4$2 -> com.potatoandtomato.games.screens.main.b$27$2:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$eggImage2 -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$4 this$1 -> b
    235:235:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$4,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    238:240:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.potatoandtomato.games.screens.main.StageImagesActor$5 -> com.potatoandtomato.games.screens.main.b$28:
    com.badlogic.gdx.scenes.scene2d.Actor val$egg -> a
    com.badlogic.gdx.scenes.scene2d.ui.Table val$table -> b
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> c
    253:253:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> <init>
    256:273:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$5$1 -> com.potatoandtomato.games.screens.main.b$28$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$5 this$1 -> a
    262:262:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$5) -> <init>
    265:266:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.potatoandtomato.games.screens.main.StageImagesActor$6 -> com.potatoandtomato.games.screens.main.b$29:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    278:278:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    281:326:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$6$1 -> com.potatoandtomato.games.screens.main.b$29$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$coverImage -> a
    com.potatoandtomato.games.screens.main.StageImagesActor$6 this$1 -> b
    308:308:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$6,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    311:320:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.main.StageImagesActor$7 -> com.potatoandtomato.games.screens.main.b$30:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    333:333:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    336:340:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$8 -> com.potatoandtomato.games.screens.main.b$31:
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> a
    345:345:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor) -> <init>
    348:351:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$9 -> com.potatoandtomato.games.screens.main.b$32:
    java.lang.String val$extra -> a
    com.potatoandtomato.games.models.GameModel val$gameModel -> b
    com.potatoandtomato.games.screens.main.StageImagesActor this$0 -> c
    356:356:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor,java.lang.String,com.potatoandtomato.games.models.GameModel) -> <init>
    359:427:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$9$1 -> com.potatoandtomato.games.screens.main.b$32$1:
    com.potatoandtomato.games.screens.main.StageImagesActor$9 this$1 -> a
    398:398:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$9) -> <init>
    401:404:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesActor$9$2 -> com.potatoandtomato.games.screens.main.b$32$2:
    int val$finalI -> a
    com.potatoandtomato.games.models.LightTimingModel val$finalLightTimingModel -> b
    com.potatoandtomato.games.screens.main.StageImagesActor$9 this$1 -> c
    409:409:void <init>(com.potatoandtomato.games.screens.main.StageImagesActor$9,int,com.potatoandtomato.games.models.LightTimingModel) -> <init>
    412:421:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesLogic -> com.potatoandtomato.games.screens.main.c:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.badlogic.gdx.scenes.scene2d.ui.Table imageOneTable -> b
    com.badlogic.gdx.scenes.scene2d.ui.Table imageTwoTable -> c
    com.badlogic.gdx.scenes.scene2d.ui.Table imageOneInnerTable -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table imageTwoInnerTable -> e
    com.potatoandtomato.games.screens.main.StageImagesActor stageImagesActor -> f
    com.potatoandtomato.games.enums.StageType stageType -> g
    java.lang.String extra -> h
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> i
    com.potatoandtomato.games.models.Services services -> j
    com.potatoandtomato.games.enums.BonusType bonusType -> k
    boolean disallowClick -> l
    com.potatoandtomato.games.absintf.StageImagesHandlerListener stageImagesHandlerListener -> m
    46:50:void <init>(com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.Services,com.potatoandtomato.games.models.GameModel) -> <init>
    53:60:void init(com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    63:82:java.lang.String generateBonusTypeExtra(com.potatoandtomato.games.enums.BonusType,java.util.ArrayList) -> a
    86:90:void beforeStartStage(com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
    93:123:void process() -> a
    126:139:boolean checkCanTouch(float,float,boolean) -> a
    143:152:com.badlogic.gdx.math.Vector2 processTouch(float,float,boolean) -> b
    157:207:void setListeners() -> b
    210:211:void setStageImagesHandlerListener(com.potatoandtomato.games.absintf.StageImagesHandlerListener) -> a
    215:216:void dispose() -> dispose
    30:30:com.potatoandtomato.games.absintf.StageImagesHandlerListener access$000(com.potatoandtomato.games.screens.main.StageImagesLogic) -> a
    30:30:com.potatoandtomato.games.screens.main.StageImagesActor access$100(com.potatoandtomato.games.screens.main.StageImagesLogic) -> b
    30:30:boolean access$202(com.potatoandtomato.games.screens.main.StageImagesLogic,boolean) -> a
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Table access$300(com.potatoandtomato.games.screens.main.StageImagesLogic) -> c
    30:30:com.potatoandtomato.games.enums.BonusType access$400(com.potatoandtomato.games.screens.main.StageImagesLogic) -> d
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Table access$500(com.potatoandtomato.games.screens.main.StageImagesLogic) -> e
    30:30:com.potatoandtomato.games.models.GameModel access$600(com.potatoandtomato.games.screens.main.StageImagesLogic) -> f
com.potatoandtomato.games.screens.main.StageImagesLogic$1 -> com.potatoandtomato.games.screens.main.c$1:
    com.potatoandtomato.games.screens.main.StageImagesLogic this$0 -> a
    104:104:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic) -> <init>
    107:108:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesLogic$2 -> com.potatoandtomato.games.screens.main.c$2:
    com.potatoandtomato.games.screens.main.StageImagesLogic this$0 -> a
    111:111:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic) -> <init>
    114:117:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesLogic$3 -> com.potatoandtomato.games.screens.main.c$3:
    com.potatoandtomato.games.screens.main.StageImagesLogic this$0 -> a
    157:157:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic) -> <init>
    160:183:void run() -> run
com.potatoandtomato.games.screens.main.StageImagesLogic$3$1 -> com.potatoandtomato.games.screens.main.c$3$1:
    com.potatoandtomato.games.screens.main.StageImagesLogic$3 this$1 -> a
    160:160:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic$3) -> <init>
    163:167:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.potatoandtomato.games.screens.main.StageImagesLogic$3$2 -> com.potatoandtomato.games.screens.main.c$3$2:
    com.potatoandtomato.games.screens.main.StageImagesLogic$3 this$1 -> a
    171:171:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic$3) -> <init>
    174:180:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.potatoandtomato.games.screens.main.StageImagesLogic$4 -> com.potatoandtomato.games.screens.main.c$4:
    com.potatoandtomato.games.screens.main.StageImagesLogic this$0 -> a
    187:187:void <init>(com.potatoandtomato.games.screens.main.StageImagesLogic) -> <init>
    191:197:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
    201:204:void onCorrectClicked(com.potatoandtomato.games.models.SimpleRectangle,int) -> a
com.potatoandtomato.games.screens.main.StageStateActor -> com.potatoandtomato.games.screens.main.d:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.assets.MyAssets assets -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image papyrusStartImage -> d
    com.badlogic.gdx.scenes.scene2d.ui.Image papyrusEndImage -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table papyrusRootTable -> f
    com.badlogic.gdx.scenes.scene2d.ui.Table papyrusContentTable -> g
    32:36:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    40:67:void populate() -> a
    70:97:void openPapyrus(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    100:127:void switchPapyrus(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    130:154:void closePapyrus(java.lang.Runnable) -> a
    157:157:com.badlogic.gdx.scenes.scene2d.ui.Table getPapyrusContentTable() -> b
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Table access$002(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Table access$102(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> b
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Table access$100(com.potatoandtomato.games.screens.main.StageStateActor) -> a
    24:24:com.potatoandtomato.games.assets.MyAssets access$200(com.potatoandtomato.games.screens.main.StageStateActor) -> b
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Table access$300(com.potatoandtomato.games.screens.main.StageStateActor) -> c
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.main.StageStateActor) -> d
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Image access$402(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Image access$502(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> b
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Image access$400(com.potatoandtomato.games.screens.main.StageStateActor) -> e
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Image access$500(com.potatoandtomato.games.screens.main.StageStateActor) -> f
    24:24:com.potatoandtomato.games.models.Services access$600(com.potatoandtomato.games.screens.main.StageStateActor) -> g
com.potatoandtomato.games.screens.main.StageStateActor$1 -> com.potatoandtomato.games.screens.main.d$1:
    com.potatoandtomato.games.screens.main.StageStateActor this$0 -> a
    40:40:void <init>(com.potatoandtomato.games.screens.main.StageStateActor) -> <init>
    43:65:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$2 -> com.potatoandtomato.games.screens.main.d$2:
    com.badlogic.gdx.scenes.scene2d.Actor val$toShowActor -> a
    com.potatoandtomato.games.screens.main.StageStateActor this$0 -> b
    70:70:void <init>(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.Actor) -> <init>
    73:95:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$2$1 -> com.potatoandtomato.games.screens.main.d$2$1:
    com.potatoandtomato.games.screens.main.StageStateActor$2 this$1 -> a
    82:82:void <init>(com.potatoandtomato.games.screens.main.StageStateActor$2) -> <init>
    85:93:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$2$1$1 -> com.potatoandtomato.games.screens.main.d$2$1$1:
    com.potatoandtomato.games.screens.main.StageStateActor$2$1 this$2 -> a
    88:88:void <init>(com.potatoandtomato.games.screens.main.StageStateActor$2$1) -> <init>
    91:91:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$3 -> com.potatoandtomato.games.screens.main.d$3:
    com.badlogic.gdx.scenes.scene2d.Actor val$toShowActor -> a
    com.potatoandtomato.games.screens.main.StageStateActor this$0 -> b
    100:100:void <init>(com.potatoandtomato.games.screens.main.StageStateActor,com.badlogic.gdx.scenes.scene2d.Actor) -> <init>
    103:125:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$3$1 -> com.potatoandtomato.games.screens.main.d$3$1:
    com.badlogic.gdx.scenes.scene2d.Actor val$originalPapyrus -> a
    com.potatoandtomato.games.screens.main.StageStateActor$3 this$1 -> b
    105:105:void <init>(com.potatoandtomato.games.screens.main.StageStateActor$3,com.badlogic.gdx.scenes.scene2d.Actor) -> <init>
    108:116:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$4 -> com.potatoandtomato.games.screens.main.d$4:
    java.lang.Runnable val$onFinish -> a
    com.potatoandtomato.games.screens.main.StageStateActor this$0 -> b
    130:130:void <init>(com.potatoandtomato.games.screens.main.StageStateActor,java.lang.Runnable) -> <init>
    133:152:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$4$1 -> com.potatoandtomato.games.screens.main.d$4$1:
    com.potatoandtomato.games.screens.main.StageStateActor$4 this$1 -> a
    140:140:void <init>(com.potatoandtomato.games.screens.main.StageStateActor$4) -> <init>
    143:150:void run() -> run
com.potatoandtomato.games.screens.main.StageStateActor$4$1$1 -> com.potatoandtomato.games.screens.main.d$4$1$1:
    com.potatoandtomato.games.screens.main.StageStateActor$4$1 this$2 -> a
    143:143:void <init>(com.potatoandtomato.games.screens.main.StageStateActor$4$1) -> <init>
    146:148:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic -> com.potatoandtomato.games.screens.main.e:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    com.potatoandtomato.games.screens.main.StageStateActor stageStateActor -> d
    com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract currentPapyrusScene -> e
    com.potatoandtomato.games.enums.GameState previousState -> f
    boolean papyrusOpened -> g
    int currentIndex -> h
    32:40:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    43:94:void stateChanged(com.potatoandtomato.games.enums.GameState) -> a
    97:122:void openPapyrus(com.potatoandtomato.games.enums.PapyrusType) -> a
    125:139:void closeCurrentPapyrus() -> a
    142:152:com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract papyrusTypeToScene(com.potatoandtomato.games.enums.PapyrusType) -> b
    156:165:void setBonusMeta(com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
    168:174:void setListeners() -> b
    177:177:boolean isPapyrusOpened() -> c
    181:181:com.potatoandtomato.games.screens.main.StageStateActor getStageStateActor() -> d
    186:187:void dispose() -> dispose
    21:21:com.potatoandtomato.games.enums.GameState access$000(com.potatoandtomato.games.screens.main.StageStateLogic) -> a
    21:21:com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract access$100(com.potatoandtomato.games.screens.main.StageStateLogic) -> b
    21:21:com.potatoandtomato.games.enums.GameState access$002(com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.enums.GameState) -> a
    21:21:com.potatoandtomato.games.screens.main.StageStateActor access$200(com.potatoandtomato.games.screens.main.StageStateLogic) -> c
    21:21:com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract access$102(com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract) -> a
    21:21:boolean access$302(com.potatoandtomato.games.screens.main.StageStateLogic,boolean) -> a
com.potatoandtomato.games.screens.main.StageStateLogic$1 -> com.potatoandtomato.games.screens.main.e$1:
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> a
    61:61:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic) -> <init>
    64:65:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$2 -> com.potatoandtomato.games.screens.main.e$2:
    com.potatoandtomato.games.enums.GameState val$newState -> a
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> b
    70:70:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.enums.GameState) -> <init>
    73:83:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$3 -> com.potatoandtomato.games.screens.main.e$3:
    com.potatoandtomato.games.enums.PapyrusType val$papyrusType -> a
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> b
    97:97:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.enums.PapyrusType) -> <init>
    100:120:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$3$1 -> com.potatoandtomato.games.screens.main.e$3$1:
    com.potatoandtomato.games.screens.main.StageStateLogic$3 this$1 -> a
    101:101:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic$3) -> <init>
    104:110:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$3$1$1 -> com.potatoandtomato.games.screens.main.e$3$1$1:
    com.potatoandtomato.games.screens.main.StageStateLogic$3$1 this$2 -> a
    104:104:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic$3$1) -> <init>
    107:108:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$4 -> com.potatoandtomato.games.screens.main.e$4:
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> a
    125:125:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic) -> <init>
    128:136:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$4$1 -> com.potatoandtomato.games.screens.main.e$4$1:
    com.potatoandtomato.games.screens.main.StageStateLogic$4 this$1 -> a
    129:129:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic$4) -> <init>
    132:134:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$5 -> com.potatoandtomato.games.screens.main.e$5:
    com.potatoandtomato.games.enums.BonusType val$bonusType -> a
    java.lang.String val$extra -> b
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> c
    156:156:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> <init>
    159:162:void run() -> run
com.potatoandtomato.games.screens.main.StageStateLogic$6 -> com.potatoandtomato.games.screens.main.e$6:
    com.potatoandtomato.games.screens.main.StageStateLogic this$0 -> a
    168:168:void <init>(com.potatoandtomato.games.screens.main.StageStateLogic) -> <init>
    171:172:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.main.StageStateLogic$7 -> com.potatoandtomato.games.screens.main.e$7:
    int[] $SwitchMap$com$potatoandtomato$games$enums$PapyrusType -> a
    142:142:void <clinit>() -> <clinit>
com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene -> com.potatoandtomato.games.screens.b.a:
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.games.assets.MyAssets assets -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table root -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> f
    com.badlogic.gdx.scenes.scene2d.ui.Label messageLabel -> g
    33:40:void <init>(com.potatoandtomato.games.models.Services,com.badlogic.gdx.scenes.scene2d.ui.Table) -> <init>
    43:99:void populate() -> a
    102:108:void revealBonus(com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
    113:120:void dispose() -> dispose
    25:25:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> a
    25:25:com.potatoandtomato.games.assets.MyAssets access$100(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> b
    25:25:com.badlogic.gdx.scenes.scene2d.ui.Table access$200(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> c
    25:25:com.badlogic.gdx.scenes.scene2d.ui.Label access$302(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    25:25:com.badlogic.gdx.scenes.scene2d.ui.Label access$300(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> d
    25:25:com.potatoandtomato.games.models.Services access$400(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> e
com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$1 -> com.potatoandtomato.games.screens.b.a$1:
    com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene this$0 -> a
    43:43:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> <init>
    47:97:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$1$1 -> com.potatoandtomato.games.screens.b.a$1$1:
    com.badlogic.gdx.scenes.scene2d.ui.Table val$tracesTable -> a
    com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$1 this$1 -> b
    59:59:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$1,com.badlogic.gdx.scenes.scene2d.ui.Table) -> <init>
    62:64:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$2 -> com.potatoandtomato.games.screens.b.a$2:
    com.potatoandtomato.games.enums.BonusType val$bonusType -> a
    com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene this$0 -> b
    102:102:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene,com.potatoandtomato.games.enums.BonusType) -> <init>
    105:106:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene$3 -> com.potatoandtomato.games.screens.b.a$3:
    com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene this$0 -> a
    114:114:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeBonusPapyrusScene) -> <init>
    117:118:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene -> com.potatoandtomato.games.screens.b.b:
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.games.assets.MyAssets assets -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table root -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> f
    com.potatoandtomato.common.controls.Animator knightAnimator -> g
    com.badlogic.gdx.scenes.scene2d.ui.Container messageLabelContainer -> h
    com.badlogic.gdx.scenes.scene2d.ui.Image gearIcon -> i
    com.badlogic.gdx.scenes.scene2d.ui.Label messageLabel -> j
    boolean isContinue -> k
    38:46:void <init>(com.potatoandtomato.games.models.Services,com.badlogic.gdx.scenes.scene2d.ui.Table,boolean) -> <init>
    49:87:void populate() -> a
    90:122:void gameReadyToStart() -> b
    127:134:void dispose() -> dispose
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> a
    26:26:com.potatoandtomato.games.assets.MyAssets access$100(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> b
    26:26:com.potatoandtomato.common.controls.Animator access$202(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene,com.potatoandtomato.common.controls.Animator) -> a
    26:26:com.potatoandtomato.common.controls.Animator access$200(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> c
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$300(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> d
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$402(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$400(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> e
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Label access$502(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    26:26:boolean access$600(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> f
    26:26:com.potatoandtomato.games.models.Services access$700(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> g
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Container access$802(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene,com.badlogic.gdx.scenes.scene2d.ui.Container) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Label access$500(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> h
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Container access$800(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> i
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$1 -> com.potatoandtomato.games.screens.b.b$1:
    com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene this$0 -> a
    49:49:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> <init>
    53:85:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2 -> com.potatoandtomato.games.screens.b.b$2:
    com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene this$0 -> a
    90:90:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> <init>
    93:120:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2$1 -> com.potatoandtomato.games.screens.b.b$2$1:
    com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2 this$1 -> a
    99:99:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2) -> <init>
    102:103:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2$2 -> com.potatoandtomato.games.screens.b.b$2$2:
    com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2 this$1 -> a
    106:106:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$2) -> <init>
    109:110:void run() -> run
com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene$3 -> com.potatoandtomato.games.screens.b.b$3:
    com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene this$0 -> a
    128:128:void <init>(com.potatoandtomato.games.screens.papyruses.BeforeStartPapyrusScene) -> <init>
    131:132:void run() -> run
com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene -> com.potatoandtomato.games.screens.b.c:
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.games.assets.MyAssets assets -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table root -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> f
    com.potatoandtomato.games.models.GameModel gameModel -> g
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> h
    36:45:void <init>(com.potatoandtomato.games.models.Services,com.badlogic.gdx.scenes.scene2d.ui.Table,com.potatoandtomato.games.models.GameModel,com.potatoandtomato.common.GameCoordinator) -> <init>
    48:125:void populate() -> a
    131:138:void dispose() -> dispose
    27:27:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> a
    27:27:com.potatoandtomato.games.assets.MyAssets access$100(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> b
    27:27:com.potatoandtomato.games.models.Services access$200(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> c
    27:27:com.potatoandtomato.games.models.GameModel access$300(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> d
    27:27:com.potatoandtomato.common.GameCoordinator access$400(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> e
com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene$1 -> com.potatoandtomato.games.screens.b.c$1:
    com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene this$0 -> a
    48:48:void <init>(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> <init>
    51:123:void run() -> run
com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene$2 -> com.potatoandtomato.games.screens.b.c$2:
    com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene this$0 -> a
    132:132:void <init>(com.potatoandtomato.games.screens.papyruses.GameOverPapyrusScene) -> <init>
    135:136:void run() -> run
com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract -> com.potatoandtomato.games.screens.b.d:
    java.lang.Runnable onClosingRunnable -> a
    boolean disposed -> b
    15:17:void <init>() -> <init>
    20:21:void setOnClosingRunnable(java.lang.Runnable) -> a
    24:31:void shouldCloseInMiliSecs(long) -> a
    35:36:void dispose() -> dispose
com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract$1 -> com.potatoandtomato.games.screens.b.d$1:
    com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract this$0 -> a
    24:24:void <init>(com.potatoandtomato.games.screens.papyruses.PapyrusSceneAbstract) -> <init>
    27:29:void run() -> run
com.potatoandtomato.games.screens.review.ReviewActor -> com.potatoandtomato.games.screens.c.a:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.assets.MyAssets assets -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label skipLabel -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label goToLabel -> e
    com.badlogic.gdx.scenes.scene2d.ui.Label deleteLabel -> f
    com.badlogic.gdx.scenes.scene2d.ui.TextField goToTextField -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image blockingReviewImage -> h
    31:36:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    39:75:void populate() -> a
    78:85:void refreshDesign(com.potatoandtomato.games.models.GameModel) -> a
    88:99:void updateBlockingReview(com.potatoandtomato.games.models.GameModel) -> b
    102:102:com.badlogic.gdx.scenes.scene2d.ui.Label getSkipLabel() -> b
    106:106:com.badlogic.gdx.scenes.scene2d.ui.Label getGoToLabel() -> c
    110:110:com.badlogic.gdx.scenes.scene2d.ui.Label getDeleteLabel() -> d
    114:114:com.badlogic.gdx.scenes.scene2d.ui.TextField getGoToTextField() -> e
    22:22:com.potatoandtomato.games.assets.MyAssets access$000(com.potatoandtomato.games.screens.review.ReviewActor) -> a
    22:22:com.badlogic.gdx.scenes.scene2d.ui.TextField access$102(com.potatoandtomato.games.screens.review.ReviewActor,com.badlogic.gdx.scenes.scene2d.ui.TextField) -> a
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$202(com.potatoandtomato.games.screens.review.ReviewActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$302(com.potatoandtomato.games.screens.review.ReviewActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> b
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$402(com.potatoandtomato.games.screens.review.ReviewActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> c
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$502(com.potatoandtomato.games.screens.review.ReviewActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Image access$500(com.potatoandtomato.games.screens.review.ReviewActor) -> b
    22:22:com.badlogic.gdx.scenes.scene2d.ui.TextField access$100(com.potatoandtomato.games.screens.review.ReviewActor) -> c
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Table access$600(com.potatoandtomato.games.screens.review.ReviewActor) -> d
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$200(com.potatoandtomato.games.screens.review.ReviewActor) -> e
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$300(com.potatoandtomato.games.screens.review.ReviewActor) -> f
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Label access$400(com.potatoandtomato.games.screens.review.ReviewActor) -> g
com.potatoandtomato.games.screens.review.ReviewActor$1 -> com.potatoandtomato.games.screens.c.a$1:
    com.potatoandtomato.games.screens.review.ReviewActor this$0 -> a
    39:39:void <init>(com.potatoandtomato.games.screens.review.ReviewActor) -> <init>
    42:71:void run() -> run
com.potatoandtomato.games.screens.review.ReviewActor$2 -> com.potatoandtomato.games.screens.c.a$2:
    com.potatoandtomato.games.models.GameModel val$gameModel -> a
    com.potatoandtomato.games.screens.review.ReviewActor this$0 -> b
    78:78:void <init>(com.potatoandtomato.games.screens.review.ReviewActor,com.potatoandtomato.games.models.GameModel) -> <init>
    81:83:void run() -> run
com.potatoandtomato.games.screens.review.ReviewActor$3 -> com.potatoandtomato.games.screens.c.a$3:
    com.potatoandtomato.games.models.GameModel val$gameModel -> a
    com.potatoandtomato.games.screens.review.ReviewActor this$0 -> b
    88:88:void <init>(com.potatoandtomato.games.screens.review.ReviewActor,com.potatoandtomato.games.models.GameModel) -> <init>
    91:97:void run() -> run
com.potatoandtomato.games.screens.review.ReviewLogic -> com.potatoandtomato.games.screens.c.b:
    com.potatoandtomato.games.screens.review.ReviewActor reviewActor -> a
    com.potatoandtomato.games.models.GameModel gameModel -> b
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> d
    com.potatoandtomato.games.absintf.ReviewLogicListener reviewLogicListener -> e
    boolean confirmDeleted -> f
    28:35:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    38:42:void invalidate() -> a
    46:113:void setListeners() -> c
    122:122:com.potatoandtomato.games.screens.review.ReviewActor getReviewActor() -> b
    126:127:void setReviewLogicListener(com.potatoandtomato.games.absintf.ReviewLogicListener) -> a
    19:19:com.potatoandtomato.games.models.GameModel access$000(com.potatoandtomato.games.screens.review.ReviewLogic) -> a
    19:19:com.potatoandtomato.games.absintf.ReviewLogicListener access$100(com.potatoandtomato.games.screens.review.ReviewLogic) -> b
    19:19:com.potatoandtomato.games.screens.review.ReviewActor access$200(com.potatoandtomato.games.screens.review.ReviewLogic) -> c
    19:19:boolean access$300(com.potatoandtomato.games.screens.review.ReviewLogic) -> d
    19:19:boolean access$302(com.potatoandtomato.games.screens.review.ReviewLogic,boolean) -> a
    19:19:com.potatoandtomato.games.models.Services access$400(com.potatoandtomato.games.screens.review.ReviewLogic) -> e
com.potatoandtomato.games.screens.review.ReviewLogic$1 -> com.potatoandtomato.games.screens.c.b$1:
    com.potatoandtomato.games.screens.review.ReviewLogic this$0 -> a
    46:46:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic) -> <init>
    49:53:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.review.ReviewLogic$2 -> com.potatoandtomato.games.screens.c.b$2:
    com.potatoandtomato.games.screens.review.ReviewLogic this$0 -> a
    57:57:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic) -> <init>
    60:109:void run() -> run
com.potatoandtomato.games.screens.review.ReviewLogic$2$1 -> com.potatoandtomato.games.screens.c.b$2$1:
    com.potatoandtomato.games.screens.review.ReviewLogic$2 this$1 -> a
    60:60:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic$2) -> <init>
    63:66:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.review.ReviewLogic$2$2 -> com.potatoandtomato.games.screens.c.b$2$2:
    com.potatoandtomato.games.screens.review.ReviewLogic$2 this$1 -> a
    69:69:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic$2) -> <init>
    72:82:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.review.ReviewLogic$2$3 -> com.potatoandtomato.games.screens.c.b$2$3:
    com.potatoandtomato.games.screens.review.ReviewLogic$2 this$1 -> a
    85:85:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic$2) -> <init>
    88:107:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.review.ReviewLogic$2$3$1 -> com.potatoandtomato.games.screens.c.b$2$3$1:
    com.potatoandtomato.games.screens.review.ReviewLogic$2$3 this$2 -> a
    95:95:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic$2$3) -> <init>
    98:104:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.screens.review.ReviewLogic$2$3$1$1 -> com.potatoandtomato.games.screens.c.b$2$3$1$1:
    com.potatoandtomato.games.screens.review.ReviewLogic$2$3$1 this$3 -> a
    98:98:void <init>(com.potatoandtomato.games.screens.review.ReviewLogic$2$3$1) -> <init>
    101:102:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor -> com.potatoandtomato.games.screens.d.a:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.assets.MyAssets assets -> c
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label mainScoreLabel -> e
    com.badlogic.gdx.scenes.scene2d.ui.Label nextHighScoreLabel -> f
    com.badlogic.gdx.utils.Array poppedActorsArray -> g
    com.badlogic.gdx.scenes.scene2d.ui.Table popRulerActor -> h
    com.badlogic.gdx.scenes.scene2d.Stage stage -> i
    42:48:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    51:87:void populate(int) -> a
    90:96:void setMainScore(int) -> b
    99:105:void setNextHighScore(int) -> c
    108:133:void popRulerScoreOnPosition(float,float,int) -> a
    136:177:void popScoreOnPosition(float,float,java.lang.String,boolean,java.lang.Runnable) -> a
    180:193:void clearAllPopScores() -> a
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.scores.ScoresActor) -> a
    30:30:com.potatoandtomato.games.assets.MyAssets access$100(com.potatoandtomato.games.screens.scores.ScoresActor) -> b
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Label access$202(com.potatoandtomato.games.screens.scores.ScoresActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Label access$200(com.potatoandtomato.games.screens.scores.ScoresActor) -> c
    30:30:com.potatoandtomato.games.models.Services access$300(com.potatoandtomato.games.screens.scores.ScoresActor) -> d
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Label access$402(com.potatoandtomato.games.screens.scores.ScoresActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> b
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Label access$400(com.potatoandtomato.games.screens.scores.ScoresActor) -> e
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Table access$500(com.potatoandtomato.games.screens.scores.ScoresActor) -> f
    30:30:com.badlogic.gdx.scenes.scene2d.ui.Table access$502(com.potatoandtomato.games.screens.scores.ScoresActor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    30:30:com.badlogic.gdx.scenes.scene2d.Stage access$600(com.potatoandtomato.games.screens.scores.ScoresActor) -> g
    30:30:com.badlogic.gdx.scenes.scene2d.Stage access$602(com.potatoandtomato.games.screens.scores.ScoresActor,com.badlogic.gdx.scenes.scene2d.Stage) -> a
    30:30:com.badlogic.gdx.utils.Array access$700(com.potatoandtomato.games.screens.scores.ScoresActor) -> h
com.potatoandtomato.games.screens.scores.ScoresActor$1 -> com.potatoandtomato.games.screens.d.a$1:
    int val$currentScore -> a
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> b
    51:51:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor,int) -> <init>
    54:85:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$2 -> com.potatoandtomato.games.screens.d.a$2:
    int val$score -> a
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> b
    90:90:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor,int) -> <init>
    93:94:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$3 -> com.potatoandtomato.games.screens.d.a$3:
    int val$nextHighScore -> a
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> b
    99:99:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor,int) -> <init>
    102:103:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$4 -> com.potatoandtomato.games.screens.d.a$4:
    float val$x -> a
    float val$y -> b
    int val$width -> c
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> d
    108:108:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor,float,float,int) -> <init>
    111:130:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$5 -> com.potatoandtomato.games.screens.d.a$5:
    boolean val$isSpecial -> a
    java.lang.String val$msg -> b
    float val$x -> c
    float val$y -> d
    java.lang.Runnable val$onFinish -> e
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> f
    136:136:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor,boolean,java.lang.String,float,float,java.lang.Runnable) -> <init>
    139:175:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$5$1 -> com.potatoandtomato.games.screens.d.a$5$1:
    com.potatoandtomato.games.screens.scores.ScoresActor$5 this$1 -> a
    167:167:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor$5) -> <init>
    170:171:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresActor$6 -> com.potatoandtomato.games.screens.d.a$6:
    com.potatoandtomato.games.screens.scores.ScoresActor this$0 -> a
    180:180:void <init>(com.potatoandtomato.games.screens.scores.ScoresActor) -> <init>
    183:191:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic -> com.potatoandtomato.games.screens.d.b:
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.models.GameModel gameModel -> c
    com.potatoandtomato.games.screens.time_bar.KnightLogic knightLogic -> d
    com.potatoandtomato.games.screens.time_bar.CastleLogic castleLogic -> e
    com.potatoandtomato.games.screens.hints.HintsLogic hintsLogic -> f
    com.potatoandtomato.games.screens.scores.ScoresActor scoresActor -> g
    com.potatoandtomato.common.utils.SafeThread safeThread -> h
    java.util.ArrayList leaderboardRecords -> i
    int originalScores -> j
    int PER_CLICK_SCORE -> k
    int PER_HINT_LEFT_SCORE -> l
    int PER_CASTLE_STATE_SCORE -> m
    int PER_METER_DISTANCE_SCORE -> n
    43:62:void <init>(com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.Services,com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.screens.time_bar.KnightLogic,com.potatoandtomato.games.screens.time_bar.CastleLogic,com.potatoandtomato.games.screens.hints.HintsLogic) -> <init>
    65:67:void refreshAllScores() -> a
    70:72:void refreshScoresDesign() -> b
    75:77:void fakeAddScores(int) -> a
    80:85:void calculateWithoutAnimation(boolean) -> a
    88:185:void calculate() -> c
    188:196:int getCastleScores() -> h
    200:200:int getHintsScores() -> i
    204:205:int getRemainingDistanceScores() -> j
    210:219:void addScoreAndPopScoreOnActor(com.badlogic.gdx.scenes.scene2d.Actor,int,java.lang.Runnable) -> a
    222:229:void popStringOnActor(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.String,java.lang.Runnable) -> a
    232:238:java.util.HashMap getFinalScoreDetails() -> d
    242:251:int getNextLeaderboardScore() -> e
    256:291:void setListeners() -> f
    294:294:com.potatoandtomato.games.screens.scores.ScoresActor getScoresActor() -> g
    298:299:void setScoresActor(com.potatoandtomato.games.screens.scores.ScoresActor) -> a
    303:304:void dispose() -> dispose
    32:32:com.potatoandtomato.games.screens.time_bar.CastleLogic access$000(com.potatoandtomato.games.screens.scores.ScoresLogic) -> a
    32:32:int access$100(com.potatoandtomato.games.screens.scores.ScoresLogic) -> b
    32:32:com.potatoandtomato.games.models.GameModel access$200(com.potatoandtomato.games.screens.scores.ScoresLogic) -> c
    32:32:com.potatoandtomato.games.screens.time_bar.KnightLogic access$300(com.potatoandtomato.games.screens.scores.ScoresLogic) -> d
    32:32:int access$400(com.potatoandtomato.games.screens.scores.ScoresLogic) -> e
    32:32:com.potatoandtomato.games.models.Services access$500(com.potatoandtomato.games.screens.scores.ScoresLogic) -> f
    32:32:com.potatoandtomato.games.screens.scores.ScoresActor access$600(com.potatoandtomato.games.screens.scores.ScoresLogic) -> g
com.potatoandtomato.games.screens.scores.ScoresLogic$1 -> com.potatoandtomato.games.screens.d.b$1:
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> a
    97:97:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic) -> <init>
    100:163:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1 -> com.potatoandtomato.games.screens.d.b$1$1:
    com.potatoandtomato.games.screens.scores.ScoresLogic$1 this$1 -> a
    100:100:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1) -> <init>
    103:161:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1 -> com.potatoandtomato.games.screens.d.b$1$1$1:
    com.potatoandtomato.games.screens.scores.ScoresLogic$1$1 this$2 -> a
    103:103:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1$1) -> <init>
    106:159:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1 -> com.potatoandtomato.games.screens.d.b$1$1$1$1:
    com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1 this$3 -> a
    106:106:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1) -> <init>
    109:157:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1 -> com.potatoandtomato.games.screens.d.b$1$1$1$1$1:
    int val$remainingDistance -> a
    com.badlogic.gdx.math.Vector2 val$knightActorPosition -> b
    int[] val$originalScore -> c
    com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1 this$4 -> d
    115:115:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1,int,com.badlogic.gdx.math.Vector2,int[]) -> <init>
    119:155:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1$1 -> com.potatoandtomato.games.screens.d.b$1$1$1$1$1$1:
    int val$finalI -> a
    com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1 this$5 -> b
    128:128:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1,int) -> <init>
    131:133:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1$2 -> com.potatoandtomato.games.screens.d.b$1$1$1$1$1$2:
    com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1 this$5 -> a
    143:143:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$1$1$1$1$1) -> <init>
    146:147:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$2 -> com.potatoandtomato.games.screens.d.b$2:
    java.lang.Runnable val$afterCalculateHintRunnable -> a
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> b
    169:169:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic,java.lang.Runnable) -> <init>
    172:173:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$3 -> com.potatoandtomato.games.screens.d.b$3:
    java.lang.Runnable val$afterCalculateHintRunnable -> a
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> b
    178:178:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic,java.lang.Runnable) -> <init>
    181:182:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$4 -> com.potatoandtomato.games.screens.d.b$4:
    int val$score -> a
    java.lang.Runnable val$onFinish -> b
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> c
    212:212:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic,int,java.lang.Runnable) -> <init>
    215:217:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$5 -> com.potatoandtomato.games.screens.d.b$5:
    java.lang.Runnable val$onFinish -> a
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> b
    223:223:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic,java.lang.Runnable) -> <init>
    226:227:void run() -> run
com.potatoandtomato.games.screens.scores.ScoresLogic$6 -> com.potatoandtomato.games.screens.d.b$6:
    com.potatoandtomato.games.screens.scores.ScoresLogic this$0 -> a
    256:256:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic) -> <init>
    260:261:void onStageNumberChanged(int) -> a
    265:266:void onAddedClickCount(java.lang.String,int) -> a
    270:281:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
    285:289:void onScoresChanged(double) -> a
com.potatoandtomato.games.screens.scores.ScoresLogic$6$1 -> com.potatoandtomato.games.screens.d.b$6$1:
    com.potatoandtomato.games.screens.scores.ScoresLogic$6 this$1 -> a
    271:271:void <init>(com.potatoandtomato.games.screens.scores.ScoresLogic$6) -> <init>
    274:275:void run() -> run
com.potatoandtomato.games.screens.stage_counter.StageCounterActor -> com.potatoandtomato.games.screens.e.a:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.assets.MyAssets assets -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label stageLabel -> d
    com.badlogic.gdx.scenes.scene2d.ui.Table specialStageTable -> e
    com.badlogic.gdx.scenes.scene2d.ui.Image specialStageImage -> f
    35:40:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    43:69:void populate() -> a
    72:101:void refreshStageNumber(int,com.potatoandtomato.games.enums.StageType) -> a
    26:26:com.potatoandtomato.games.assets.MyAssets access$000(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$100(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> b
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Label access$202(com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Label access$200(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> c
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$302(com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$300(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> d
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$402(com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$400(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> e
com.potatoandtomato.games.screens.stage_counter.StageCounterActor$1 -> com.potatoandtomato.games.screens.e.a$1:
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor this$0 -> a
    43:43:void <init>(com.potatoandtomato.games.screens.stage_counter.StageCounterActor) -> <init>
    46:67:void run() -> run
com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2 -> com.potatoandtomato.games.screens.e.a$2:
    com.potatoandtomato.games.enums.StageType val$stageType -> a
    int val$newNumber -> b
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor this$0 -> c
    72:72:void <init>(com.potatoandtomato.games.screens.stage_counter.StageCounterActor,com.potatoandtomato.games.enums.StageType,int) -> <init>
    75:98:void run() -> run
com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2$1 -> com.potatoandtomato.games.screens.e.a$2$1:
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2 this$1 -> a
    83:83:void <init>(com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2) -> <init>
    86:87:void run() -> run
com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2$2 -> com.potatoandtomato.games.screens.e.a$2$2:
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2 this$1 -> a
    91:91:void <init>(com.potatoandtomato.games.screens.stage_counter.StageCounterActor$2) -> <init>
    94:95:void run() -> run
com.potatoandtomato.games.screens.stage_counter.StageCounterLogic -> com.potatoandtomato.games.screens.e.b:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> b
    com.potatoandtomato.games.screens.stage_counter.StageCounterActor stageCounterActor -> c
    com.potatoandtomato.games.models.GameModel gameModel -> d
    com.potatoandtomato.games.enums.StageType currentStageType -> e
    20:27:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.models.GameModel) -> <init>
    30:31:void stageChanged() -> a
    34:47:void setListeners() -> b
    51:51:com.potatoandtomato.games.screens.stage_counter.StageCounterActor getStageCounterActor() -> c
    12:12:com.potatoandtomato.games.enums.StageType access$000(com.potatoandtomato.games.screens.stage_counter.StageCounterLogic) -> a
com.potatoandtomato.games.screens.stage_counter.StageCounterLogic$1 -> com.potatoandtomato.games.screens.e.b$1:
    com.potatoandtomato.games.screens.stage_counter.StageCounterLogic this$0 -> a
    34:34:void <init>(com.potatoandtomato.games.screens.stage_counter.StageCounterLogic) -> <init>
    37:38:void onStageNumberChanged(int) -> a
    42:45:void onStageTypeChanged(com.potatoandtomato.games.enums.StageType) -> a
com.potatoandtomato.games.screens.time_bar.CastleActor -> com.potatoandtomato.games.screens.f.a:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.assets.Assets assets -> c
    22:27:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    30:52:void changeState(com.potatoandtomato.games.enums.CastleState) -> a
    16:16:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.time_bar.CastleActor) -> a
    16:16:com.potatoandtomato.common.assets.Assets access$100(com.potatoandtomato.games.screens.time_bar.CastleActor) -> b
    16:16:com.potatoandtomato.games.models.Services access$200(com.potatoandtomato.games.screens.time_bar.CastleActor) -> c
com.potatoandtomato.games.screens.time_bar.CastleActor$1 -> com.potatoandtomato.games.screens.f.a$1:
    com.potatoandtomato.games.enums.CastleState val$castleState -> a
    com.potatoandtomato.games.screens.time_bar.CastleActor this$0 -> b
    30:30:void <init>(com.potatoandtomato.games.screens.time_bar.CastleActor,com.potatoandtomato.games.enums.CastleState) -> <init>
    33:49:void run() -> run
com.potatoandtomato.games.screens.time_bar.CastleLogic -> com.potatoandtomato.games.screens.f.b:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    com.potatoandtomato.games.screens.time_bar.CastleActor castleActor -> d
    int totalMiliSecs -> e
    int totalAtkMiliSecs -> f
    com.potatoandtomato.games.enums.CastleState previousState -> g
    26:34:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    37:40:void reset() -> a
    43:49:void updateRemainingMiliSecs(int) -> a
    52:59:com.potatoandtomato.games.enums.CastleState getCastleState(int) -> b
    64:83:void setListeners() -> b
    87:87:com.potatoandtomato.games.screens.time_bar.CastleActor getCastleActor() -> c
    16:16:com.potatoandtomato.games.models.GameModel access$000(com.potatoandtomato.games.screens.time_bar.CastleLogic) -> a
com.potatoandtomato.games.screens.time_bar.CastleLogic$1 -> com.potatoandtomato.games.screens.f.b$1:
    com.potatoandtomato.games.screens.time_bar.CastleLogic this$0 -> a
    64:64:void <init>(com.potatoandtomato.games.screens.time_bar.CastleLogic) -> <init>
    68:69:void onCastleAttackedCountChanged(int) -> b
    73:74:void onStageNumberChanged(int) -> a
    78:81:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.time_bar.KingActor -> com.potatoandtomato.games.screens.f.c:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.assets.MyAssets assets -> c
    com.potatoandtomato.common.assets.AnimationAssets animations -> d
    com.potatoandtomato.common.controls.Animator normalAnimator -> e
    com.potatoandtomato.common.controls.Animator panicAnimator -> f
    com.potatoandtomato.common.controls.Animator winAnimator -> g
    com.potatoandtomato.common.controls.Animator loseAnimator -> h
    com.potatoandtomato.games.enums.KingState currentKingState -> i
    31:40:void <init>(com.potatoandtomato.games.models.Services) -> <init>
    43:61:void populate() -> c
    64:91:void changeState(com.potatoandtomato.games.enums.KingState) -> a
    94:101:void stopAnimation() -> a
    104:111:void continueAnimation() -> b
    22:22:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.time_bar.KingActor) -> a
    22:22:com.potatoandtomato.common.controls.Animator access$102(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.common.controls.Animator) -> a
    22:22:com.potatoandtomato.common.assets.AnimationAssets access$200(com.potatoandtomato.games.screens.time_bar.KingActor) -> b
    22:22:com.potatoandtomato.common.controls.Animator access$100(com.potatoandtomato.games.screens.time_bar.KingActor) -> c
    22:22:com.potatoandtomato.common.controls.Animator access$302(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.common.controls.Animator) -> b
    22:22:com.potatoandtomato.common.controls.Animator access$300(com.potatoandtomato.games.screens.time_bar.KingActor) -> d
    22:22:com.potatoandtomato.common.controls.Animator access$402(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.common.controls.Animator) -> c
    22:22:com.potatoandtomato.common.controls.Animator access$400(com.potatoandtomato.games.screens.time_bar.KingActor) -> e
    22:22:com.potatoandtomato.common.controls.Animator access$502(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.common.controls.Animator) -> d
    22:22:com.potatoandtomato.common.controls.Animator access$500(com.potatoandtomato.games.screens.time_bar.KingActor) -> f
    22:22:com.potatoandtomato.games.enums.KingState access$600(com.potatoandtomato.games.screens.time_bar.KingActor) -> g
    22:22:com.potatoandtomato.games.enums.KingState access$602(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.games.enums.KingState) -> a
    22:22:com.potatoandtomato.games.models.Services access$700(com.potatoandtomato.games.screens.time_bar.KingActor) -> h
com.potatoandtomato.games.screens.time_bar.KingActor$1 -> com.potatoandtomato.games.screens.f.c$1:
    com.potatoandtomato.games.screens.time_bar.KingActor this$0 -> a
    43:43:void <init>(com.potatoandtomato.games.screens.time_bar.KingActor) -> <init>
    46:59:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingActor$2 -> com.potatoandtomato.games.screens.f.c$2:
    com.potatoandtomato.games.enums.KingState val$kingState -> a
    com.potatoandtomato.games.screens.time_bar.KingActor this$0 -> b
    64:64:void <init>(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.games.enums.KingState) -> <init>
    67:88:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingActor$3 -> com.potatoandtomato.games.screens.f.c$3:
    com.potatoandtomato.games.screens.time_bar.KingActor this$0 -> a
    94:94:void <init>(com.potatoandtomato.games.screens.time_bar.KingActor) -> <init>
    97:99:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingActor$4 -> com.potatoandtomato.games.screens.f.c$4:
    com.potatoandtomato.games.screens.time_bar.KingActor this$0 -> a
    104:104:void <init>(com.potatoandtomato.games.screens.time_bar.KingActor) -> <init>
    107:109:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingLogic -> com.potatoandtomato.games.screens.f.d:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.games.screens.time_bar.KingActor kingActor -> c
    int totalMiliSecs -> d
    int totalAtkMiliSecs -> e
    23:30:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services) -> <init>
    33:36:void reset() -> a
    39:45:void updateRemainingMiliSecs(int) -> a
    48:54:void updateKingByGameState(com.potatoandtomato.games.enums.GameState) -> a
    57:63:void setPaused(boolean) -> a
    66:117:void setListeners() -> b
    120:120:com.potatoandtomato.games.screens.time_bar.KingActor getKingActor() -> c
com.potatoandtomato.games.screens.time_bar.KingLogic$1 -> com.potatoandtomato.games.screens.f.d$1:
    com.potatoandtomato.games.screens.time_bar.KingLogic this$0 -> a
    66:66:void <init>(com.potatoandtomato.games.screens.time_bar.KingLogic) -> <init>
    70:76:void onStageNumberChanged(int) -> a
    80:86:void onRemainingMiliSecsChanged(int) -> c
    90:115:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.time_bar.KingLogic$1$1 -> com.potatoandtomato.games.screens.f.d$1$1:
    com.potatoandtomato.games.screens.time_bar.KingLogic$1 this$1 -> a
    70:70:void <init>(com.potatoandtomato.games.screens.time_bar.KingLogic$1) -> <init>
    73:74:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingLogic$1$2 -> com.potatoandtomato.games.screens.f.d$1$2:
    int val$remainingMiliSecs -> a
    com.potatoandtomato.games.screens.time_bar.KingLogic$1 this$1 -> b
    80:80:void <init>(com.potatoandtomato.games.screens.time_bar.KingLogic$1,int) -> <init>
    83:84:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingLogic$1$3 -> com.potatoandtomato.games.screens.f.d$1$3:
    com.potatoandtomato.games.enums.GameState val$newState -> a
    com.potatoandtomato.games.screens.time_bar.KingLogic$1 this$1 -> b
    90:90:void <init>(com.potatoandtomato.games.screens.time_bar.KingLogic$1,com.potatoandtomato.games.enums.GameState) -> <init>
    93:113:void run() -> run
com.potatoandtomato.games.screens.time_bar.KingLogic$1$3$1 -> com.potatoandtomato.games.screens.f.d$1$3$1:
    com.potatoandtomato.games.screens.time_bar.KingLogic$1$3 this$2 -> a
    102:102:void <init>(com.potatoandtomato.games.screens.time_bar.KingLogic$1$3) -> <init>
    105:107:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor -> com.potatoandtomato.games.screens.f.e:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.assets.AnimationAssets animationAssets -> c
    com.potatoandtomato.common.controls.Animator knightWalkAnimator -> d
    com.potatoandtomato.common.controls.Animator knightRunAnimator -> e
    com.potatoandtomato.common.controls.Animator knightAtkAnimator -> f
    com.potatoandtomato.common.controls.Animator knightWonAnimator -> g
    com.badlogic.gdx.scenes.scene2d.ui.Container knightContainer -> h
    float totalDistance -> i
    com.potatoandtomato.games.enums.KnightState currentKnightState -> j
    com.badlogic.gdx.scenes.scene2d.ui.Image iceTopImage -> k
    com.badlogic.gdx.scenes.scene2d.ui.Image iceBottomImage -> l
    com.badlogic.gdx.math.Vector2 positionOnStage -> m
    float knightFinalX -> n
    39:46:void <init>(com.potatoandtomato.games.models.Services,float) -> <init>
    49:85:void populate() -> h
    89:95:void setKnightAtkSpeed(float) -> a
    98:131:void changeState(com.potatoandtomato.games.enums.KnightState,boolean) -> a
    134:179:void setFreeze(boolean) -> a
    182:204:void setKnightPositionX(float,boolean,boolean) -> a
    207:216:void continueAnimation() -> a
    219:228:void stopAnimation() -> b
    231:234:com.badlogic.gdx.math.Vector2 getPositionOnStage() -> c
    238:273:void popStars() -> d
    277:292:void act(float) -> act
    295:295:com.potatoandtomato.common.controls.Animator getKnightAtkAnimator() -> e
    299:299:com.potatoandtomato.common.controls.Animator getKnightWalkAnimator() -> f
    303:303:com.potatoandtomato.common.controls.Animator getKnightRunAnimator() -> g
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Container access$002(com.potatoandtomato.games.screens.time_bar.KnightActor,com.badlogic.gdx.scenes.scene2d.ui.Container) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Container access$000(com.potatoandtomato.games.screens.time_bar.KnightActor) -> a
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Table access$100(com.potatoandtomato.games.screens.time_bar.KnightActor) -> b
    26:26:float access$200(com.potatoandtomato.games.screens.time_bar.KnightActor) -> c
    26:26:com.potatoandtomato.common.controls.Animator access$302(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.common.controls.Animator) -> a
    26:26:com.potatoandtomato.common.assets.AnimationAssets access$400(com.potatoandtomato.games.screens.time_bar.KnightActor) -> d
    26:26:com.potatoandtomato.common.controls.Animator access$300(com.potatoandtomato.games.screens.time_bar.KnightActor) -> e
    26:26:com.potatoandtomato.common.controls.Animator access$502(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.common.controls.Animator) -> b
    26:26:com.potatoandtomato.common.controls.Animator access$500(com.potatoandtomato.games.screens.time_bar.KnightActor) -> f
    26:26:com.potatoandtomato.common.controls.Animator access$602(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.common.controls.Animator) -> c
    26:26:com.potatoandtomato.common.controls.Animator access$600(com.potatoandtomato.games.screens.time_bar.KnightActor) -> g
    26:26:com.potatoandtomato.common.controls.Animator access$702(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.common.controls.Animator) -> d
    26:26:com.potatoandtomato.common.controls.Animator access$700(com.potatoandtomato.games.screens.time_bar.KnightActor) -> h
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$802(com.potatoandtomato.games.screens.time_bar.KnightActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    26:26:com.potatoandtomato.games.models.Services access$900(com.potatoandtomato.games.screens.time_bar.KnightActor) -> i
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$800(com.potatoandtomato.games.screens.time_bar.KnightActor) -> j
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$1002(com.potatoandtomato.games.screens.time_bar.KnightActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> b
    26:26:com.badlogic.gdx.scenes.scene2d.ui.Image access$1000(com.potatoandtomato.games.screens.time_bar.KnightActor) -> k
    26:26:com.potatoandtomato.games.enums.KnightState access$1100(com.potatoandtomato.games.screens.time_bar.KnightActor) -> l
    26:26:com.potatoandtomato.games.enums.KnightState access$1102(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.games.enums.KnightState) -> a
    26:26:float access$1200(com.potatoandtomato.games.screens.time_bar.KnightActor) -> m
com.potatoandtomato.games.screens.time_bar.KnightActor$1 -> com.potatoandtomato.games.screens.f.e$1:
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> a
    49:49:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor) -> <init>
    52:83:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$1$1 -> com.potatoandtomato.games.screens.f.e$1$1:
    com.potatoandtomato.games.screens.time_bar.KnightActor$1 this$1 -> a
    77:77:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor$1) -> <init>
    80:81:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$2 -> com.potatoandtomato.games.screens.f.e$2:
    float val$frameRate -> a
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> b
    89:89:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor,float) -> <init>
    92:93:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$3 -> com.potatoandtomato.games.screens.f.e$3:
    com.potatoandtomato.games.enums.KnightState val$knightState -> a
    boolean val$playSound -> b
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> c
    98:98:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor,com.potatoandtomato.games.enums.KnightState,boolean) -> <init>
    101:128:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$4 -> com.potatoandtomato.games.screens.f.e$4:
    boolean val$freezed -> a
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> b
    134:134:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor,boolean) -> <init>
    137:175:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$4$1 -> com.potatoandtomato.games.screens.f.e$4$1:
    com.potatoandtomato.games.screens.time_bar.KnightActor$4 this$1 -> a
    161:161:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor$4) -> <init>
    164:165:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$4$2 -> com.potatoandtomato.games.screens.f.e$4$2:
    com.potatoandtomato.games.screens.time_bar.KnightActor$4 this$1 -> a
    167:167:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor$4) -> <init>
    170:171:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$5 -> com.potatoandtomato.games.screens.f.e$5:
    float val$x -> a
    boolean val$animate -> b
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> c
    197:197:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor,float,boolean) -> <init>
    200:201:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$6 -> com.potatoandtomato.games.screens.f.e$6:
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> a
    207:207:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor) -> <init>
    210:213:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$7 -> com.potatoandtomato.games.screens.f.e$7:
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> a
    219:219:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor) -> <init>
    222:225:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$8 -> com.potatoandtomato.games.screens.f.e$8:
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> a
    238:238:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor) -> <init>
    241:269:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$8$1 -> com.potatoandtomato.games.screens.f.e$8$1:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$starImage -> a
    com.potatoandtomato.games.screens.time_bar.KnightActor$8 this$1 -> b
    260:260:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor$8,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    263:264:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightActor$9 -> com.potatoandtomato.games.screens.f.e$9:
    com.badlogic.gdx.scenes.scene2d.ui.Image val$image -> a
    com.potatoandtomato.games.screens.time_bar.KnightActor this$0 -> b
    285:285:void <init>(com.potatoandtomato.games.screens.time_bar.KnightActor,com.badlogic.gdx.scenes.scene2d.ui.Image) -> <init>
    288:289:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightLogic -> com.potatoandtomato.games.screens.f.f:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    com.potatoandtomato.games.screens.time_bar.KnightActor knightActor -> d
    float totalMiliSecs -> e
    float totalMovingMiliSecs -> f
    float totalAtkMiliSecs -> g
    float totalDistance -> h
    boolean freezed -> i
    int playingMusic -> j
    29:39:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    43:51:void reset() -> a
    54:60:void updatePosition(float) -> a
    63:64:void kingCapture() -> b
    67:71:void setFreezed(boolean) -> a
    74:81:void setPause(boolean) -> b
    84:90:float getRemainingDistanceByRemainingTime(float) -> b
    94:101:void stopMusic() -> c
    104:114:void startMusic(boolean) -> c
    117:183:void setListeners() -> d
    186:186:com.potatoandtomato.games.screens.time_bar.KnightActor getKnightActor() -> e
    190:191:void setKnightActor(com.potatoandtomato.games.screens.time_bar.KnightActor) -> a
    16:16:com.potatoandtomato.games.models.GameModel access$000(com.potatoandtomato.games.screens.time_bar.KnightLogic) -> a
    16:16:com.potatoandtomato.games.screens.time_bar.KnightActor access$100(com.potatoandtomato.games.screens.time_bar.KnightLogic) -> b
com.potatoandtomato.games.screens.time_bar.KnightLogic$1 -> com.potatoandtomato.games.screens.f.f$1:
    com.potatoandtomato.games.screens.time_bar.KnightLogic this$0 -> a
    117:117:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic) -> <init>
    121:127:void onStageNumberChanged(int) -> a
    131:139:void onRemainingMiliSecsChanged(int) -> c
    143:144:void onFreezingMiliSecsChanged(int) -> d
    148:166:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.time_bar.KnightLogic$1$1 -> com.potatoandtomato.games.screens.f.f$1$1:
    com.potatoandtomato.games.screens.time_bar.KnightLogic$1 this$1 -> a
    121:121:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic$1) -> <init>
    124:125:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightLogic$1$2 -> com.potatoandtomato.games.screens.f.f$1$2:
    int val$remainingMiliSecs -> a
    com.potatoandtomato.games.screens.time_bar.KnightLogic$1 this$1 -> b
    131:131:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic$1,int) -> <init>
    134:137:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightLogic$1$3 -> com.potatoandtomato.games.screens.f.f$1$3:
    com.potatoandtomato.games.enums.GameState val$newState -> a
    com.potatoandtomato.games.screens.time_bar.KnightLogic$1 this$1 -> b
    148:148:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic$1,com.potatoandtomato.games.enums.GameState) -> <init>
    151:164:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightLogic$2 -> com.potatoandtomato.games.screens.f.f$2:
    com.potatoandtomato.games.screens.time_bar.KnightLogic this$0 -> a
    169:169:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic) -> <init>
    172:179:void run() -> run
com.potatoandtomato.games.screens.time_bar.KnightLogic$2$1 -> com.potatoandtomato.games.screens.f.f$2$1:
    com.potatoandtomato.games.screens.time_bar.KnightLogic$2 this$1 -> a
    172:172:void <init>(com.potatoandtomato.games.screens.time_bar.KnightLogic$2) -> <init>
    175:177:void run() -> run
com.potatoandtomato.games.screens.time_bar.TimeActor -> com.potatoandtomato.games.screens.f.g:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.assets.MyAssets assets -> b
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.common.GameCoordinator coordinator -> d
    20:26:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    29:41:void populate(com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.games.screens.time_bar.CastleActor,com.potatoandtomato.games.screens.time_bar.KnightActor) -> a
    13:13:com.badlogic.gdx.scenes.scene2d.ui.Table access$000(com.potatoandtomato.games.screens.time_bar.TimeActor) -> a
com.potatoandtomato.games.screens.time_bar.TimeActor$1 -> com.potatoandtomato.games.screens.f.g$1:
    com.potatoandtomato.games.screens.time_bar.KingActor val$kingActor -> a
    com.potatoandtomato.games.screens.time_bar.CastleActor val$castleActor -> b
    com.potatoandtomato.games.screens.time_bar.KnightActor val$knightActor -> c
    com.potatoandtomato.games.screens.time_bar.TimeActor this$0 -> d
    29:29:void <init>(com.potatoandtomato.games.screens.time_bar.TimeActor,com.potatoandtomato.games.screens.time_bar.KingActor,com.potatoandtomato.games.screens.time_bar.CastleActor,com.potatoandtomato.games.screens.time_bar.KnightActor) -> <init>
    32:38:void run() -> run
com.potatoandtomato.games.screens.time_bar.TimeLogic -> com.potatoandtomato.games.screens.f.h:
    com.potatoandtomato.games.models.Services services -> a
    com.potatoandtomato.games.models.GameModel gameModel -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    boolean paused -> d
    boolean started -> e
    java.util.ArrayList timeThreads -> f
    com.potatoandtomato.games.screens.time_bar.TimeActor timeActor -> g
    com.potatoandtomato.games.screens.time_bar.KingLogic kingLogic -> h
    com.potatoandtomato.games.screens.time_bar.CastleLogic castleLogic -> i
    com.potatoandtomato.games.screens.time_bar.KnightLogic knightLogic -> j
    35:48:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator,com.potatoandtomato.games.screens.time_bar.KingLogic,com.potatoandtomato.games.screens.time_bar.CastleLogic,com.potatoandtomato.games.screens.time_bar.KnightLogic,com.potatoandtomato.games.models.GameModel) -> <init>
    51:54:void restart() -> a
    57:60:void startIfNotStarted() -> b
    63:94:void start() -> k
    97:98:void setPause(boolean) -> a
    101:109:void stop() -> c
    112:118:void reduceTime() -> d
    121:162:void setListeners() -> e
    166:167:void dispose() -> dispose
    170:170:com.potatoandtomato.games.screens.time_bar.TimeActor getTimeActor() -> f
    174:174:com.potatoandtomato.games.models.GameModel getGameModel() -> g
    178:178:com.potatoandtomato.games.screens.time_bar.KingLogic getKingLogic() -> h
    182:182:com.potatoandtomato.games.screens.time_bar.CastleLogic getCastleLogic() -> i
    186:186:com.potatoandtomato.games.screens.time_bar.KnightLogic getKnightLogic() -> j
    21:21:com.potatoandtomato.games.models.GameModel access$000(com.potatoandtomato.games.screens.time_bar.TimeLogic) -> a
    21:21:boolean access$100(com.potatoandtomato.games.screens.time_bar.TimeLogic) -> b
    21:21:com.potatoandtomato.games.screens.time_bar.KnightLogic access$200(com.potatoandtomato.games.screens.time_bar.TimeLogic) -> c
    21:21:com.potatoandtomato.games.models.Services access$300(com.potatoandtomato.games.screens.time_bar.TimeLogic) -> d
com.potatoandtomato.games.screens.time_bar.TimeLogic$1 -> com.potatoandtomato.games.screens.f.h$1:
    com.potatoandtomato.common.utils.SafeThread val$timeThread -> a
    com.potatoandtomato.games.screens.time_bar.TimeLogic this$0 -> b
    73:73:void <init>(com.potatoandtomato.games.screens.time_bar.TimeLogic,com.potatoandtomato.common.utils.SafeThread) -> <init>
    77:92:void run() -> run
com.potatoandtomato.games.screens.time_bar.TimeLogic$2 -> com.potatoandtomato.games.screens.f.h$2:
    com.potatoandtomato.games.screens.time_bar.TimeLogic this$0 -> a
    121:121:void <init>(com.potatoandtomato.games.screens.time_bar.TimeLogic) -> <init>
    125:125:void onStageNumberChanged(int) -> a
    129:137:void onTimeFinished() -> a
    141:142:void onCorrectClicked(com.potatoandtomato.games.models.SimpleRectangle,int) -> a
    146:160:void onGameStateChanged(com.potatoandtomato.games.enums.GameState,com.potatoandtomato.games.enums.GameState) -> a
com.potatoandtomato.games.screens.time_bar.TimeLogic$2$1 -> com.potatoandtomato.games.screens.f.h$2$1:
    com.potatoandtomato.games.screens.time_bar.TimeLogic$2 this$1 -> a
    129:129:void <init>(com.potatoandtomato.games.screens.time_bar.TimeLogic$2) -> <init>
    132:133:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersActor -> com.potatoandtomato.games.screens.g.a:
    com.badlogic.gdx.scenes.scene2d.ui.Table _this -> a
    com.potatoandtomato.games.assets.MyAssets assets -> b
    com.potatoandtomato.games.models.Services services -> c
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> d
    java.util.HashMap userIdToTableMap -> e
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle counterLabelStyle -> f
    43:52:void <init>(com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    55:109:void populate() -> a
    112:138:void updateCounter(java.lang.String,int) -> a
    141:181:void updateSorting(java.util.ArrayList) -> a
    184:196:void setUserNameVisibility(java.lang.String,boolean) -> a
    199:199:java.util.HashMap getUserIdToTableMap() -> b
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle access$002(com.potatoandtomato.games.screens.user_counters.UserCountersActor,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle access$000(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> a
    34:34:com.potatoandtomato.games.assets.MyAssets access$100(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> b
    34:34:com.potatoandtomato.common.GameCoordinator access$200(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> c
    34:34:java.util.HashMap access$300(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> d
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Table access$400(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> e
com.potatoandtomato.games.screens.user_counters.UserCountersActor$1 -> com.potatoandtomato.games.screens.g.a$1:
    com.potatoandtomato.games.screens.user_counters.UserCountersActor this$0 -> a
    55:55:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersActor) -> <init>
    58:105:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersActor$2 -> com.potatoandtomato.games.screens.g.a$2:
    java.lang.String val$userId -> a
    int val$updatedCounter -> b
    com.potatoandtomato.games.screens.user_counters.UserCountersActor this$0 -> c
    112:112:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersActor,java.lang.String,int) -> <init>
    115:136:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersActor$2$1 -> com.potatoandtomato.games.screens.g.a$2$1:
    com.badlogic.gdx.scenes.scene2d.Actor val$oldLabel -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersActor$2 this$1 -> b
    122:122:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersActor$2,com.badlogic.gdx.scenes.scene2d.Actor) -> <init>
    125:126:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersActor$3 -> com.potatoandtomato.games.screens.g.a$3:
    java.util.ArrayList val$userIdsSortedByRecord -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersActor this$0 -> b
    141:141:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersActor,java.util.ArrayList) -> <init>
    144:179:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersActor$4 -> com.potatoandtomato.games.screens.g.a$4:
    java.lang.String val$userId -> a
    boolean val$visible -> b
    com.potatoandtomato.games.screens.user_counters.UserCountersActor this$0 -> c
    184:184:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersActor,java.lang.String,boolean) -> <init>
    187:193:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersLogic -> com.potatoandtomato.games.screens.g.b:
    com.potatoandtomato.games.models.GameModel gameModel -> a
    com.potatoandtomato.games.models.Services services -> b
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> c
    com.potatoandtomato.games.screens.user_counters.UserCountersActor userCountersActor -> d
    java.util.ArrayList showingUsernameUserIds -> e
    int sortCd -> f
    com.potatoandtomato.common.utils.SafeThread safeThread -> g
    30:40:void <init>(com.potatoandtomato.games.models.GameModel,com.potatoandtomato.games.models.Services,com.potatoandtomato.common.GameCoordinator) -> <init>
    43:46:void userCounterChanged(java.lang.String) -> a
    49:65:void sort() -> a
    69:120:void setListenersAndThreads() -> b
    125:147:java.util.Map sortByComparator(java.util.Map,boolean) -> a
    151:151:com.potatoandtomato.games.screens.user_counters.UserCountersActor getUserCountersActor() -> c
    157:158:void dispose() -> dispose
    20:20:com.potatoandtomato.games.screens.user_counters.UserCountersActor access$000(com.potatoandtomato.games.screens.user_counters.UserCountersLogic) -> a
    20:20:int access$100(com.potatoandtomato.games.screens.user_counters.UserCountersLogic) -> b
    20:20:int access$110(com.potatoandtomato.games.screens.user_counters.UserCountersLogic) -> c
    20:20:int access$102(com.potatoandtomato.games.screens.user_counters.UserCountersLogic,int) -> a
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$1 -> com.potatoandtomato.games.screens.g.b$1:
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic this$0 -> a
    69:69:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic) -> <init>
    72:78:void onAddedClickCount(java.lang.String,int) -> a
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$1$1 -> com.potatoandtomato.games.screens.g.b$1$1:
    java.lang.String val$userId -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic$1 this$1 -> b
    72:72:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic$1,java.lang.String) -> <init>
    75:76:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$2 -> com.potatoandtomato.games.screens.g.b$2:
    java.lang.String val$userId -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic this$0 -> b
    84:84:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic,java.lang.String) -> <init>
    87:95:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$2$1 -> com.potatoandtomato.games.screens.g.b$2$1:
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic$2 this$1 -> a
    88:88:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic$2) -> <init>
    91:93:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$3 -> com.potatoandtomato.games.screens.g.b$3:
    com.potatoandtomato.common.utils.SafeThread val$safeThread -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic this$0 -> b
    100:100:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic,com.potatoandtomato.common.utils.SafeThread) -> <init>
    104:111:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$3$1 -> com.potatoandtomato.games.screens.g.b$3$1:
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic$3 this$1 -> a
    111:111:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic$3) -> <init>
    114:115:void run() -> run
com.potatoandtomato.games.screens.user_counters.UserCountersLogic$4 -> com.potatoandtomato.games.screens.g.b$4:
    boolean val$ascOrder -> a
    com.potatoandtomato.games.screens.user_counters.UserCountersLogic this$0 -> b
    128:128:void <init>(com.potatoandtomato.games.screens.user_counters.UserCountersLogic,boolean) -> <init>
    131:134:int compare(java.util.Map$Entry,java.util.Map$Entry) -> a
    128:128:int compare(java.lang.Object,java.lang.Object) -> compare
com.potatoandtomato.games.services.Database -> com.potatoandtomato.games.services.a:
    com.potatoandtomato.common.GameCoordinator _coordinator -> a
    com.firebase.client.Firebase _ref -> b
    java.lang.String _storageTable -> c
    java.lang.String _adminTable -> d
    20:25:void <init>(com.firebase.client.Firebase) -> <init>
    28:39:void checkIsAdmin(java.lang.String,com.potatoandtomato.games.absintf.DatabaseListener) -> b
    42:52:void getLastImageIndex(com.potatoandtomato.games.absintf.DatabaseListener) -> a
    55:66:void getImageDetailsByIndex(int,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    69:70:void getImageDetailsById(java.lang.String,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    73:81:void addNewImageDetails(com.potatoandtomato.games.models.ImageDetails,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    84:85:void getAllImageDetails(com.potatoandtomato.games.absintf.DatabaseListener) -> b
    88:108:void removeImageById(java.lang.String,com.potatoandtomato.games.absintf.DatabaseListener) -> c
    111:112:void removeAllImages() -> a
    115:115:com.firebase.client.Firebase getTable(java.lang.String) -> a
    119:135:void getData(com.firebase.client.Query,com.potatoandtomato.games.absintf.DatabaseListener) -> a
    139:155:void getSingleData(com.firebase.client.Query,com.potatoandtomato.games.absintf.DatabaseListener) -> b
    16:16:com.firebase.client.Firebase access$000(com.potatoandtomato.games.services.Database,java.lang.String) -> a
com.potatoandtomato.games.services.Database$1 -> com.potatoandtomato.games.services.a$1:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    28:28:void <init>(com.potatoandtomato.games.services.Database,java.lang.Class,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    31:37:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.services.Database$2 -> com.potatoandtomato.games.services.a$2:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    42:42:void <init>(com.potatoandtomato.games.services.Database,java.lang.Class,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    45:50:void onCallback(java.util.ArrayList,com.potatoandtomato.common.enums.Status) -> a
    42:42:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.services.Database$3 -> com.potatoandtomato.games.services.a$3:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    55:55:void <init>(com.potatoandtomato.games.services.Database,java.lang.Class,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    58:64:void onCallback(java.util.ArrayList,com.potatoandtomato.common.enums.Status) -> a
    55:55:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.services.Database$4 -> com.potatoandtomato.games.services.a$4:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    java.lang.String val$key -> b
    com.potatoandtomato.games.services.Database this$0 -> c
    75:75:void <init>(com.potatoandtomato.games.services.Database,com.potatoandtomato.games.absintf.DatabaseListener,java.lang.String) -> <init>
    78:79:void onComplete(com.firebase.client.FirebaseError,com.firebase.client.Firebase) -> onComplete
com.potatoandtomato.games.services.Database$5 -> com.potatoandtomato.games.services.a$5:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    88:88:void <init>(com.potatoandtomato.games.services.Database,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    91:106:void onComplete(com.firebase.client.FirebaseError,com.firebase.client.Firebase) -> onComplete
com.potatoandtomato.games.services.Database$5$1 -> com.potatoandtomato.games.services.a$5$1:
    com.potatoandtomato.games.services.Database$5 this$1 -> a
    93:93:void <init>(com.potatoandtomato.games.services.Database$5,java.lang.Class) -> <init>
    96:102:void onCallback(java.util.ArrayList,com.potatoandtomato.common.enums.Status) -> a
    93:93:void onCallback(java.lang.Object,com.potatoandtomato.common.enums.Status) -> a
com.potatoandtomato.games.services.Database$6 -> com.potatoandtomato.games.services.a$6:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    119:119:void <init>(com.potatoandtomato.games.services.Database,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    122:129:void onDataChange(com.firebase.client.DataSnapshot) -> onDataChange
    132:133:void onCancelled(com.firebase.client.FirebaseError) -> onCancelled
com.potatoandtomato.games.services.Database$7 -> com.potatoandtomato.games.services.a$7:
    com.potatoandtomato.games.absintf.DatabaseListener val$listener -> a
    com.potatoandtomato.games.services.Database this$0 -> b
    139:139:void <init>(com.potatoandtomato.games.services.Database,com.potatoandtomato.games.absintf.DatabaseListener) -> <init>
    142:149:void onDataChange(com.firebase.client.DataSnapshot) -> onDataChange
    152:153:void onCancelled(com.firebase.client.FirebaseError) -> onCancelled
com.potatoandtomato.games.services.RoomMsgHandler -> com.potatoandtomato.games.services.b:
    com.potatoandtomato.common.GameCoordinator gameCoordinator -> a
    com.potatoandtomato.games.absintf.RoomMsgListener listener -> b
    com.shaded.fasterxml.jackson.databind.ObjectMapper objectMapper -> c
    33:43:void <init>(com.potatoandtomato.common.GameCoordinator) -> <init>
    49:96:void received(java.lang.String,java.lang.String) -> a
    99:109:void send(java.lang.String,com.potatoandtomato.games.enums.RoomMsgType) -> a
    112:122:void sendPrivate(java.lang.String,java.lang.String,com.potatoandtomato.games.enums.RoomMsgType) -> a
    125:132:void sendTouched(float,float,int,int,com.potatoandtomato.games.models.SimpleRectangle) -> a
    135:141:void sendWon(com.potatoandtomato.games.models.WonStageModel) -> a
    144:150:void sendLose(com.potatoandtomato.games.models.GameModel) -> a
    153:161:void sendGotoNextStage(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String,int) -> a
    164:168:void sendDownloadImageRequest(java.util.ArrayList) -> a
    171:175:void sendPrivateDownloadImageRequest(java.lang.String,java.util.ArrayList) -> a
    178:185:void sendStartPlaying(java.lang.String,int,com.potatoandtomato.games.enums.StageType,com.potatoandtomato.games.enums.BonusType,java.lang.String) -> a
    189:190:void setRoomMsgListener(com.potatoandtomato.games.absintf.RoomMsgListener) -> a
    27:27:void access$000(com.potatoandtomato.games.services.RoomMsgHandler,java.lang.String,java.lang.String) -> a
com.potatoandtomato.games.services.RoomMsgHandler$1 -> com.potatoandtomato.games.services.RoomMsgHandler$1:
    com.potatoandtomato.games.services.RoomMsgHandler this$0 -> a
    37:37:void <init>(com.potatoandtomato.games.services.RoomMsgHandler) -> <init>
    40:41:void onUpdateReceived(java.lang.String,java.lang.String) -> onUpdateReceived
com.potatoandtomato.games.services.SoundsWrapper -> com.potatoandtomato.games.services.c:
    com.potatoandtomato.common.assets.Assets _assets -> a
    com.potatoandtomato.common.GameCoordinator _coordinator -> b
    java.util.ArrayList _loopingSounds -> c
    23:36:void <init>(com.potatoandtomato.common.assets.Assets,com.potatoandtomato.common.GameCoordinator) -> <init>
    39:41:void playMusic(com.potatoandtomato.games.assets.Sounds$Name) -> a
    44:46:void playMusicNoLoop(com.potatoandtomato.games.assets.Sounds$Name) -> b
    49:50:void stopAllMusics() -> a
    53:55:void stopMusic(com.potatoandtomato.games.assets.Sounds$Name) -> c
    59:61:void playSounds(com.potatoandtomato.games.assets.Sounds$Name) -> d
    64:67:void playSoundLoop(com.potatoandtomato.games.assets.Sounds$Name) -> e
    70:73:void stopSoundLoop(com.potatoandtomato.games.assets.Sounds$Name) -> f
    76:80:void stopAllLoopingSounds() -> b
    83:84:void playSounds(com.badlogic.gdx.audio.Sound) -> a
    91:93:void dispose() -> dispose
com.potatoandtomato.games.services.Texts -> com.potatoandtomato.games.services.d:
    13:13:void <init>() -> <init>
    15:15:java.lang.String nextHighScore() -> a
    16:16:java.lang.String gameStarting() -> b
    17:17:java.lang.String gameContinue() -> c
    19:19:java.lang.String verySoon() -> d
    20:20:java.lang.String gameOver() -> e
    21:21:java.lang.String memoryStart() -> f
    22:22:java.lang.String finalScore() -> g
    23:23:java.lang.String gameContinueFailed() -> h
    25:25:java.lang.String evilKnightPreparing() -> i
    26:26:java.lang.String waitingForContinue() -> j
    27:27:java.lang.String gameOverText() -> k
    29:29:java.lang.String noPlayer() -> l
    30:30:java.lang.String totalScores() -> m
    31:31:java.lang.String waitForNextStage() -> n
    32:32:java.lang.String slowMessage() -> o
    33:33:java.lang.String replenishHints() -> p
    35:35:java.lang.String notContinue() -> q
    36:36:java.lang.String xDecidedNotToContinue() -> r
    39:48:com.potatoandtomato.common.utils.Pair getMascotsSpeechAboutContinue() -> s
com.potatoandtomato.games.statics.Global -> com.potatoandtomato.games.d.a:
    boolean DEBUG -> a
    boolean REVIEW_MODE -> b
    int ATTACK_TIME_PERCENT -> c
    int ClOSE_DOOR_BUFFER_TIME -> d
    int BONUS_STAGE_NUMBER -> e
    int EXPECTED_PLAYERS_DEBUG -> f
    6:6:void <init>() -> <init>
    16:18:void setDEBUG(boolean) -> a
    21:23:void setDEBUG_BONUS(boolean) -> b
    8:13:void <clinit>() -> <clinit>
